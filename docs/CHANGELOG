    - Added certificates (Ali Abdulkadir)
    - Revert define of NPCAP_OEM, it did less than nothing. (Daniel Miller)
    - Bump version and changelog for 0.97 release (Daniel Miller)
    - Added npcap's offline docs (back) (Ali Abdulkadir)
    - A Makefile for building npcap docs locally (Ali Abdulkadir)
    - Only include data rate and channel in radiotap if they are present. (Daniel Miller)
    - Also define NPCAP_OEM for the NSIS installer (Daniel Miller)
    - Slight wording improvement ("much" to "some") (Fyodor)
    - Bump version and changelog for 0.96 release (Daniel Miller)
    - Set some more useful interface registry keywords (Daniel Miller)
    - Record the loopback adapter name when installing it. Allows removing and reinstalling the adapter. (Daniel Miller)
    - License improvements, including expanding free license rights to allow 5 Npcap installs rather than only 1. (Fyodor)
    - Only count the radiotap header size once (Daniel Miller)
    - Fix some issues with Radiotap headers. (Daniel Miller)
    - Avoid deprecated non-tagged allocation (Daniel Miller)
    - Bump version and changelog for 0.95 release (Daniel Miller)
    - Update contact info section it is up to date. Though almost all of this readme should really be merged with Npcap users' guide and Npcap.org site. (Fyodor)
    - Installer stuff is back (Ali Abdulkadir)
    - Document the /D installer option (Daniel Miller)
    - Bump version and changelog for 0.94 release (Daniel Miller)
    - Update docs to note offload issues (Daniel Miller)
    - Revert b4ac6c5c / r34474 (Daniel Miller)
    - Restore npcap-guide-wrapper.xml, mistakenly removed (Daniel Miller)
    - Update changelog for 0.93 release (Daniel Miller)
    - Note the previous behavior regarding location of registry keys (Daniel Miller)
    - Remove the rendered HTML docs in favor of the online version. (Daniel Miller)
    - Clean up .gitignore (Daniel Miller)
    - Switch service registry options to Parameters subkey (Daniel Miller)
    - Reorder user guide sections (Daniel Miller)
    - Regenerate HTML docs from XML (Daniel Miller)
    - Fix some markup in the docs (Daniel Miller)
    - Update Npcap User's Guide (Daniel Miller)
    - Fix NPCAPDIR in Build.bat (Daniel Miller)
    - Remove some unused paths from gitignore (Daniel Miller)
    - Restore Build.bat and DiagReport; they do not need to be private (Daniel Miller)
    - Bump version and changelog for 0.92 release (Daniel Miller)
    - Document new /disable_restore_point installer option (Daniel Miller)
    - Bump version and changelog for 0.91 (Daniel Miller)
    - Revert "Revert disabling setting packet filter for wifi adapters" (Daniel Miller)
    - Regenerate npcap-guide-wrapper HTML from the XML using new Makefile (Fyodor)
    - Add Makefile for regenerating npcap-guide-wrapper HTML from the XML when needed (Fyodor)
    - Improve the Q&A in docs about issue: https://github.com/nmap/nmap/issues/802. (Yang Luo)
    - Bump version and changelog for 0.90 release (Daniel Miller)
    - Revert disabling setting packet filter for wifi adapters (Daniel Miller)
    - Fix no-wifi issue on Windows 7. nmap/nmap#724 and others? (Daniel Miller)
    - Remove the unavailable logo in README. (Yang Luo)
    - Fix the environment badge in README. (Yang Luo)
    - Fix the NPFInstall.exe crash issue on Vista, solves issue: https://github.com/nmap/nmap/issues/886 (Yang Luo)
    - Removed misleading "incompatible software" section and list (Fyodor)
    - Fix a BSOD (NDIS_BUGCHECK_WAIT_EVENT_HIGH_IRQL) when detaching. (Daniel Miller)
    - Add OEM release configurations (Daniel Miller)
    - Bump version and changelog for 0.86 (Daniel Miller)
    - Free a lock before we lose access to it. (Daniel Miller)
    - Bump version and changelog for 0.85 (Daniel Miller)
    - Revert to older data structures, but with improved locking (Daniel Miller)
    - Update some markdown in the CHANGELOG (Daniel Miller)
    - Format changelog as markdown (Daniel Miller)
    - Fix the version number in the CHANGELOG (Daniel Miller)
    - Bump version and CHANGELOG for 0.84 (Daniel Miller)
    - Add debugging to file for debug builds of NpcapHelper (Daniel Miller)
    - Use %p to serialize device handles, and add TRACE debugging. Fixes nmap/nmap#814 (Daniel Miller)
    - Bump version and changelog for 0.83 (Daniel Miller)
    - Unset global Loopback Open pointer when loopback adapter is unloaded. nmap/nmap#721 (Daniel Miller)
    - Update the changelog (Daniel Miller)
    - Bump version for 0.82 (Daniel Miller)
    - Different structure to avoid corruption during packet processing when multiple open instances are being closed (Daniel Miller)
    - Correct an assert condition (Daniel Miller)
    - Bump version for 0.81 (missing from 0.81 release, but in the binaries) (Daniel Miller)
    - Update the changelog (Daniel Miller)
    - Write log files in UTF-8 to preserve localized error messages (Daniel Miller)
    - Make removing from Open arrays use a consistent loop structure (Daniel Miller)
    - Move installer build directory to private repo (Daniel Miller)
    - Report human-readable error when LWF filter fails to be installed. (Daniel Miller)
    - Add *NdisDeviceType=1 key to registry for Loopback adapter. Fixes #653 (Daniel Miller)
    - Add a couple CHANGELOG items (Daniel Miller)
    - Bump version to 0.80 (Daniel Miller)
    - Sign the Npcap uninstaller (Daniel Miller)
    - Fix a couple more issues from conflict resolution (Daniel Miller)
    - Remove a duplicated section from the NSI installer (Daniel Miller)
    - Remove packetNtx and Packet9x code. Npcap is not supported on those platforms. (Daniel Miller)
    - Update .gitignore with current paths and vim backup files (Daniel Miller)
    - Add Npcap license header to more files (Daniel Miller)
    - Add CHANGELOG file (Daniel Miller)
    - Reapply clobbered commit (Yang Luo)
    - Reapply clobbered commit (Yang Luo)
    - Reapply clobbered commit (Yang Luo)
    - Reapply clobbered commit (Yang Luo)
    - Read the install options in the uninstaller. (Yang Luo)
    - The installer will show unsuccessful finish page when install fails. (Yang Luo)
    - The uninstaller will show unsuccessful finish page when uninstall fails. (Yang Luo)
    - Reapply clobbered commit (Yang Luo)
    - Avoid some Code Analyzer warnings: C28121, C6101 (Daniel Miller)
    - Avoid null pointer derefs when removing from OpenArrays (Daniel Miller)
    - Guard references to Loopback to allow SDV to build (Daniel Miller)
    - Remove (beta) designation from installer. Version number indicates support level (Daniel Miller)
    - Add Npcap license template to modified files (Daniel Miller)
    - Clarify that downloading Npcap multiple times does not expand license rights (Fyodor)
    - Bump version to 0.78 r5 for removing XP support, adding EV/attestation signing (Daniel Miller)
    - Fix a typo and wrong comparison operator for PowerShell (Daniel Miller)
    - Add scripts for creating attestation signing package (Daniel Miller)
    - Add Win10 attestation signing, remove XP support from installer (Daniel Miller)
    - Add EV cert signing, remove 7z dependency, dual-sign (Daniel Miller)
    - Only set execution policy for current user (Daniel Miller)
    - Added LIbpcap-License.txt which includes the Libpcap license agreement (3-clause BSD) (Fyodor)
    - Add Libpcap license attribution paragraph and fix word wrapping (Fyodor)
    - Updated the docs about the uninstaller options. (Yang Luo)
    - Fixed the bug that "Npcap Loopback Adapter" can't be uninstalled. (Yang Luo)
    - Removed the false postive of "NPFInstall.exe -check_dll" in the uninstaller. (Yang Luo)
    - Make sure the process has terminated in NPFInstall.exe. (Yang Luo)
    - Added "/no_kill" option to uninstaller, if it's set to "yes", uninstaller in Silent mode will abort if any applications are still in use of Npcap. (Yang Luo)
    - Fixed the issue that WFP callout driver fails to uninstall because the WFP INF is already deleted. (Yang Luo)
    - Read the install options in the uninstaller. (Yang Luo)
    - The installer will show unsuccessful finish page when install fails. (Yang Luo)
    - The uninstaller will show unsuccessful finish page when uninstall fails. (Yang Luo)
    - The uninstaller in "/S" silent mode will wait for GUI applications to close themselves for at most 15 seconds, then terminate any unclosed to finish the uninstall. (Yang Luo)
    - The uninstaller GUI can terminate all applications that are using Npcap, if permitted by user. (Yang Luo)
    - "-kill_proc_poite" option of NPFInstall.exe Will wait GUI processes to exit as much as 15s. (Yang Luo)
    - Added "-kill_proc_poite" option to NPFInstall.exe to kill all processes that are using Npcap DLLs politely. (Yang Luo)
    - Added "-kill_proc_soft" option to NPFInstall.exe to kill all processes that are using Npcap DLLs gracefully. (Yang Luo)
    - Added "-kill_proc" option to NPFInstall.exe to kill all processes that are using Npcap DLLs. (Yang Luo)
    - Retrieved the real Windows directory instead of assuming "C:\Windows" in DiagReport. (Yang Luo)
    - minor license clarification edit (Fyodor)
    - New and much more detailed license/EULA (Fyodor)
    - Displayed WinPcap info in DiagReport. (Yang Luo)
    - Showed the processes that are using Npcap when stopping the driver in the uninstaller. (Yang Luo)
    - "NPFInstall.exe -check_dll" will only check Npcap's DLLs, WinPcap DLLs are excluded. (Yang Luo)
    - Deleted the DLLs and EXEs of home folder at last in uninstaller. (Yang Luo)
    - Showed the processes that are using Npcap in the uninstaller error messagebox. (Yang Luo)
    - Deleted NPFInstall.exe at last in the uninstaller. (Yang Luo)
    - Also enumerated 32bit process's DLLs from a 64bit NPFInstall.exe. (Yang Luo)
    - Improved the debug trace and error handling of the new "NPFInstall.exe -check_dll". (Yang Luo)
    - Improved enumDLLs() in NPFInstall.exe. (Yang Luo)
    - Enabled debug privilege for "NPFInstall.exe -check_dll". (Yang Luo)
    - Replaced PSAPI's EnumProcesses() with ToolHelp32 API. (Yang Luo)
    - Improved the debug trace and error handling of "NPFInstall.exe -check_dll". (Yang Luo)
    - Added "-check_dll" to NPFInstall.exe to detect whether the Npcap DLLs are still used by any processes, will list them if yes. (Yang Luo)
    - Improved the wording of uninstall failure message. (Yang Luo)
    - Delete the files before uninstalling the driver in uninstaller. (Yang Luo)
    - Improved the comment of Uninstall section in installer. (Yang Luo)
    - Refactored the file remove code body in the installer. (Yang Luo)
    - Refactored the file remove ${If} code in the installer. (Yang Luo)
    - Refactored out $is_64bit from the installer script. (Yang Luo)
    - Showed the in-use DLL's full path in the message of uninstaller. (Yang Luo)
    - Showed "failed to delete the DLLs" message in the uninstaller. (Yang Luo)
    - We do not delete the logs, because some logs also contain uninstall infos. (Yang Luo)
    - Updated the WDK from 10.0.10586 to 10.0.14393. (Yang Luo)
    - Updated appveyor.yml to support latest Npcap. (Yang Luo)
    - Used a faster way to render the docs online. (Yang Luo)
    - Updated the docs and README about the new raw 802.11 capture support. (Yang Luo)
    - Updated the docs about how to use Wireshark to capture raw 802.11 traffic in “Monitor Mode”. (Yang Luo)
    - Improved the error message of invalid adapter name in WlanHelper. (Yang Luo)
    - Fixed the wrong display of adapter description in WlanHelper's interactive mode. (Yang Luo)
    - Built WlanHelper.exe in Unicode instead of Multi-Byte. This will fix the wrong display of non-English characters. (Yang Luo)
    - Fixed the string output of WlanHelper's "modu" command. (Yang Luo)
    - Fixed the bug that some functions of WlanHelper.exe doesn't work. (Yang Luo)
    - Fixed the bug that using Npcap to capture at the first time causes limited connectivity on Wi-Fi adapters. (Yang Luo)
    - Improved the debug trace of OID handling code in the driver. (Yang Luo)
    - Improved the debug trace of NPF_OpenAdapter() in the driver. (Yang Luo)
    - Improved the debug trace of NPF_GetPacketFilter() and NPF_SetPacketFilter() in the driver. (Yang Luo)
    - Added "Netscout Sniffer Portable" to the incompatible list. (Yang Luo)
    - Used different WFP callout GUIDs for npcap.sys and npf.sys. (Yang Luo)
    - Improved WFP callout functions' debug trace in the driver. (Yang Luo)
    - Bumped the verion to "0.10 r13". (Yang Luo)
    - Added the /sign_mode option for installer to choose to install SHA1-signed or SHA2-signed drivers. (Yang Luo)
    - Used the SHA1-signed driver on Win8/Win2012. (Yang Luo)
    - Improved the NPFInstall.log debug trace. (Yang Luo)
    - Updated to libpcap-1.8.1. (Yang Luo)
    - Fixed the issue that Nping shows both protocol unreachable and successful replies for "nping <Local IP>". (Yang Luo)
    - Fixed the issue that Nping shows both protocol unreachable and successful replies for "nping 127.0.0.1". (Yang Luo)
    - Improved the debug trace of driver's loopback function. (Yang Luo)
    - Bumped the verion to "0.10 r10". (Yang Luo)
    - Fixed a NPFInstall.exe bug that causes "LoopbackAdapter" in registry to be the wrong value. (Yang Luo)
    - The uninstall will not show the finish page if ran with "/Q". (Yang Luo)
    - Added "Junos Pulse" to the incompatible software list. (Yang Luo)
    - Fixed the BSoD that happends when the OS sleeps after using Npcap Loopback Adapter. (Yang Luo)
    - Bumped the verion to "0.10 r8". (Yang Luo)
    - Fixed the wrong call in GetDesiredPhyList() in WlanHelper.exe. (Yang Luo)
    - The returned phy type can be "any" as well as "unknown" in WlanHelper.exe. (Yang Luo)
    - WlanHelper.exe can show messages for other error codes returned by NdisOidRequest(). (Yang Luo)
    - Added the error message for NDIS_STATUS_INVALID_OID in WlanHelper.exe. (Yang Luo)
    - Returned a customer-defined NTSTATUS in OID requests to avoid NTSTATUS-to-Win32 Error code translation. (Yang Luo)
    - Improved the error code display for GetWlanOperationMode() and SetWlanOperationMode() in WlanHelper.exe. (Yang Luo)
    - Improved the error code display for PacketRequest(). (Yang Luo)
    - Added SetCurrentPhyID() to WlanHelper.exe. (Yang Luo)
    - Fixed the bug of GetSupportedPhyTypes() in WlanHelper.exe. (Yang Luo)
    - Deploy_Debug.bat can generate an installer named "npcap-0.XX-rX-debug.exe" now. (Yang Luo)
    - Built debug version Packet.dll in Deploy_Debug.bat. (Yang Luo)
    - Defined _DEBUG_TO_FILE and _DBG together in Packet.dll. (Yang Luo)
    - Removed TRACE_PRINT_DLLMAIN() in Packet.dll. (Yang Luo)
    - Change the Npcap macro from "NPF_DRIVER_NAME_NORMAL" to "HAVE_NPCAP_PACKET_API" in libpcap, because "NPF_DRIVER_NAME_NORMAL" is not defined in Packet32.h. (Yang Luo)
    - Enabled the "raw 802.11" option in the installer. (Yang Luo)
    - Fixed the infinite loop bug of NpcapReplaceString() in Packet.dll. (Yang Luo)
    - Now PacketGetNetType() returns 802.11 instead of Ethernet if it is a WLAN adapter in monitor mode. (Yang Luo)
    - Queried OID in PacketIsMonitorModeSupported() insetad of checking link-type in Packet.dll. (Yang Luo)
    - Link release shield to releases (anatoly techtonik)
    - Added "HAVE_NPCAP_PACKET_API" macro that Libpcap/wpcap can recognize and know Npcap Packet API is provided for compilation. (Yang Luo)
    - Fixed the wrong parameters for WLAN functions in Packet.dll. (Yang Luo)
    - Improved the position of PacketIsMonitorModeSupported() in Packet.dll. (Yang Luo)
    - Added GetInterfaceCapability() to Packet.dll. (Yang Luo)
    - If the monitor mode device fails to be opened, we then try the standard one. (Yang Luo)
    - Fixed the CreateFileA() isn't called bug in Packet.dll. (Yang Luo)
    - Rolled back the change of "Now Packet.dll tries to open the WiFi version adapters too". (https://github.com/nmap/npcap/commit/0956bf88589f93d7c2b02e2fe42eab904f0db9d0) (Yang Luo)
    - Used the "_WIFI" string to call CreateFileA() in Packet.dll. (Yang Luo)
    - Stored the adapter's monitor mode in the global map in Packet.dll. (Yang Luo)
    - Fixed the compile errors in Packet.dll after renaming files to .cpp. (Yang Luo)
    - Changed the Packet.dll sources files from C to C++. (Yang Luo)
    - Improved the global variables in Packet.dll. (Yang Luo)
    - Removed two useless Npcap*() functions in Packet.dll. (Yang Luo)
    - Improved the naming of several Npcap*() functions in Packet.dll. (Yang Luo)
    - Renamed "NPcap" to "Npcap" in function names of Packet.dll. (Yang Luo)
    - Don't need to open the interface any more in order to retrieve the loopback flag in wpcap.dll. (Yang Luo)
    - Let PacketIsLoopbackAdapter() use AdapterName as parameter instead of AdapterObject in Packet.dll. (Yang Luo)
    - Fixed the path of latest libpcap's wpcap.lib in SDK. (Yang Luo)
    - Fixed a typo in docs and README. (Yang Luo)
    - The installer will jump the confirmation page of the uninstaller now. (Yang Luo)
    - Set "no_confirm" if the uninstaller is called with "/Q". (Yang Luo)
    - Made the silent uninstallation the same way as the GUI. (Yang Luo)
    - Put uninstaller's "LogSet off" in the right place. (Yang Luo)
    - Quit the installer if the uninstaller fails. (Yang Luo)
    - Removed the FileExists() check in installer, because it doesn't check the correct folder owing to WoW64 file system redirection. (Yang Luo)
    - Added "NPFInstall.log" desc to docs and README. (Yang Luo)
    - Added "Trend Micro OfficeScan Anti-virus" to the incompatible software list in README. (Yang Luo)
    - Added "Latest libpcap API Support" to docs and README. (Yang Luo)
    - Added "NDIS Light-Weight Filter (LWF) Info" to DiagReport. (Yang Luo)
    - Fixed the BSoD that NPF_RemoveFromGroupOpenArray() referenced the freed group head. (Yang Luo)
    - Changed %s to %hs for debug-tracing ANSI strings in Packet.dll. (Yang Luo)
    - Removed TRACE_PRINT_WIDECHAR() in debug.h. (Yang Luo)
    - Fixed the TCHAR-related typo in debug.h of Packet.dll. (Yang Luo)
    - Fixed two TRACE_PRINT()'s "_T" macro compile errors in Packet.dll. (Yang Luo)
    - Fixed the "Open->Dot11" unspecified bug of NPF_AttachAdapter() in the driver. (Yang Luo)
    - Now Packet.dll tries to open the WiFi version adapters too. (Yang Luo)
    - Made NPF_AttachAdapter() recognize the WiFi filter in the driver. (Yang Luo)
    - Improved the trace of NPF_AttachAdapter() in the driver. (Yang Luo)
    - Added NPF_MAX_BUFFER_SIZE define (1GiB) (Graham Sutherland)
    - Check for unusually large BIOCSETBUFFERSIZE calls (Graham Sutherland)
    - Improved the trace of NPF_SetPacketFilter() in the driver. (Yang Luo)
    - Improved the debug trace of attaching dot11 adapters in the driver. (Yang Luo)
    - Linked WiFi devices to WiFi bindings in the driver. (Yang Luo)
    - Made Dot11 a parameter of NPF_CreateDevice() in the driver. (Yang Luo)
    - Renamed macName to AdapterName in the driver. (Yang Luo)
    - Made g_NPF_Prefix a parameter of NPF_CreateDevice() in the driver. (Yang Luo)
    - Improved the variable names of NPF_CreateDevice() in the driver. (Yang Luo)
    - Bumped the verion to "0.10 r5". (Yang Luo)
    - Added useless NULL initialization to avoid MSVC's stupid warnings in the driver. (Yang Luo)
    - Improved the logic of NPF_RemoveFromOpenArray() and NPF_RemoveFromGroupOpenArray() in the driver. (Yang Luo)
    - Merged NPF_Cleanup_Internal() into NPF_Cleanup() in the driver. (Yang Luo)
    - No longer to search the group head in NPF_AddToGroupOpenArray() in the driver. (Yang Luo)
    - Called NPF_AddToOpenArray() and NPF_RemoveFromOpenArray() on the group head instead of the group members in the driver. (Yang Luo)
    - Used Open->PausePending on the group head instead of the group members in the driver. (Yang Luo)
    - Adjusted the g_NumOpenedInstances increasing position in NPF_OpenAdapter() of the driver. (Yang Luo)
    - Bumped the verion to "0.10 r4". (Yang Luo)
    - Removed NPF_RemoveUnclosedAdapters() from the comment of the driver. (Yang Luo)
    - Removed the GroupOpenArrayLock mechanism in the driver, because it has locked everything and caused new locked-too-much-time BSoDs. (Yang Luo)
    - Changed the wrong use of NPF_StartUsingOpenInstance() to NPF_StartUsingBinding() in NPF_OpenAdapter() of the driver. (Yang Luo)
    - Called NPF_CloseBinding() on the group head instead of the group members in the driver. (Yang Luo)
    - Called NPF_StartUsingBinding() and NPF_StopUsingBinding() on the group head instead of the group members in the driver. (Yang Luo)
    - Removed NPF_CloseBindingAndAdapter() in the driver. (Yang Luo)
    - Removed NPF_RemoveUnclosedAdapters() in the driver. (Yang Luo)
    - Renamed NPF_FreeAdapter() to NPF_CloseAdapter() in the driver. (Yang Luo)
    - Enabled NPFInstall's "-wlan_write_reg" function in the installer. (Yang Luo)
    - Bumped the verion to "0.10 r3". (Yang Luo)
    - Made "g_Dot11SupportMode" an option in the driver. (Yang Luo)
    - Ran "NPFInstall.exe -i" if "raw 802.11 support" is not chosen in the installer. (Yang Luo)
    - Removed "wifi_or_not" in the installer. (Yang Luo)
    - Removed WiFi INFs in the sources and deployment script. (Yang Luo)
    - Removed the WIFI INFs in the installer. (Yang Luo)
    - Added back the "raw 802.11" option to the installer. (Yang Luo)
    - Avoided MSVC's warning C4390: ';' : empty controlled statement found in Packet.dll. (Yang Luo)
    - Converted int to UINT for LinkType: NdisMediumNull in Packet.dll to avoid the warning. (Yang Luo)
    - Created global symbolic links only in Packet.dll, because we don't support NT4 any more. (Yang Luo)
    - Double-started the driver to make the 2nd LWF work. (Yang Luo)
    - Improved the trace message of NdisFDeregisterFilterDriver() in the driver. (Yang Luo)
    - Improved the debug trace of uninstalling LWF in NPFInstall.exe. (Yang Luo)
    - Now the Npcap driver still runs even when the 2nd WiFi filter doesn't work. (Yang Luo)
    - Added trace messages about executeCommand() in NPFInstall.exe. (Yang Luo)
    - Changed %ws into %s of TRACE_PRINT() functions in NPFInstall.exe. (Yang Luo)
    - Changed ErrMsg() to use _T macro in NPFInstall.exe. (Yang Luo)
    - Casted tstring.c_str() to LPCTSTR in NPFInstall.exe. (Yang Luo)
    - Deleted the parameters of TRACE_ENTER() and TRACE_EXIT() in Packet.dll. (Yang Luo)
    - Improved the strings to TCHAR in debug.h of NPFInstall.exe. (Yang Luo)
    - Improved the strings to TCHAR in the NPFInstall.exe. (2nd) (Yang Luo)
    - Improved the strings to TCHAR in the NPFInstall.exe. (Yang Luo)
    - Fixed some wstring display bugs in NPFInstall.exe. (Yang Luo)
    - Deleted the log files when uninstalling Npcap. (Yang Luo)
    - Improved trace messages of LWF install in NPFInstall.exe. (Yang Luo)
    - Added more trace messages to NPFInstall.exe. (2nd) (Yang Luo)
    - Added more trace messages to NPFInstall.exe. (Yang Luo)
    - Improved the debug traces of NPFInstall.exe. (Yang Luo)
    - Removed the function parameter of TRACE_ENTER() and TRACE_EXIT() in NPFInstall.exe. (Yang Luo)
    - Added _DEBUG_TO_FILE feature to NPFInstall.exe, the debug trace is generated at: C:\Program Files\Npcap\NPFInstall.log (Yang Luo)
    - Fixed the predefined macros for MSVC's debug configurations in NPFInstall project. (Yang Luo)
    - Added error message for NPF_RegisterOptions() in the installer. (Yang Luo)
    - Showed "WiFi" in the WiFi filter description. (Yang Luo)
    - NPFInstall.exe will install the WiFi filter too. (Yang Luo)
    - Registered 2 LWFs in the driver. (Yang Luo)
    - Improved the comment of the driver. (Yang Luo)
    - Fixed the BSoD that NPF_TapEx() accessed the CPU buffer of the OPEN_INSTANCE that was released. (Yang Luo)
    - Fixed the bug that PacketGetNetType() doesn't return the correct DLT_NULL value on Nmap. (Yang Luo)
    - Fixed a typo in README. (Yang Luo)
    - Fixed the BSoD that the driver accesses the invalid memory of incomplete g_LoopbackAdapterName variable. (Yang Luo)
    - Added "GroupOpenArrayLock" to control the access to the group open array in the driver. (Yang Luo)
    - Disabled the NPF_StartUsingOpenInstance() call in group member's tap, because it's not effective. (Yang Luo)
    - Fixed the bug that BPF filter doesn't work for IPv6 packets captured on "Npcap Loopback Adapter" with DLT_NULL option enabled. (Yang Luo)
    - Added lock to NPF_TapExForEachOpen() function in the driver. (Yang Luo)
    - We now freed the group head OPEN_INSTANCE objects in the driver. (Yang Luo)
    - Renamed NPF_CleanupForUnclosed() to NPF_Cleanup_Internal() in the driver. (Yang Luo)
    - Renamed NPF_CloseAdapter() to NPF_FreeAdapter() in the driver. (Yang Luo)
    - Removed NPF_CloseAdapterForUnclosed() in the driver. (Yang Luo)
    - Improved the code by setting Open->Size to 0 after memory free in the driver. (Yang Luo)
    - Improved the differentiation between Win8.1 and Win10 in the installer. (Yang Luo)
    - Added Win8.1 recognization in the installer. (Yang Luo)
    - Improved the OS descriptive string of the installer. (Yang Luo)
    - Set the initial value of "Status" in NPF_OpenAdapter() of the driver. (Yang Luo)
    - Refactored the code of NPF_Cleanup() and NPF_CleanupForUnclosed() in the driver. (Yang Luo)
    - Freed the adapter names using ExFreePool() instead of NdisFreeString() in the driver. (Yang Luo)
    - Added timestamp to DiagReport's output filename. (Yang Luo)
    - Added driver info to DiagReport, still in comment yet. (Yang Luo)
    - Improved the network adapter info in DiagReport. (Yang Luo)
    - Improved the performance of showing OS and CPU info in DiagReport. (Yang Luo)
    - DiagReport can show memory and network adapter info now. (Yang Luo)
    - Added "CPU Info" to DiagReport. (Yang Luo)
    - Removed a warning of unreferenced parameter in Packet.dll. (Yang Luo)
    - Improved the debug info of the PacketAddAdapterNPF() function in Packet.dll. (Yang Luo)
    - Added debug info to NPF_OpenAdapter() in the driver. (Yang Luo)
    - Fixed the bug that the "NPF_MAX_CPU_NUMBER" macro is not defined for Packet.dll. (Yang Luo)
    - Used KeGetCurrentProcessorNumberEx() instead of KeGetCurrentProcessorNumber() in the driver for Win7 and later systems. (Yang Luo)
    - Renamed g_MyNdisGroupMaxProcessorCount() to g_My_NdisGroupMaxProcessorCount(). (Yang Luo)
    - Fixed the bug that "time_conv" struct's timeval_start entries don't count to NPF_MAX_CPU_NUMBER in the driver. (Yang Luo)
    - Used MyNdisGroupMaxProcessorCount() in time_calls.h now. (Yang Luo)
    - Refactored out the MyNdisGroupMaxProcessorCount() function in the driver. (Yang Luo)
    - Fixed the Verifier BSoD that happens when duplicating an open instance which has been freed. (Yang Luo)
    - Refactored the NPF_DuplicateOpenObject() out of NPF_GetCopyFromOpenArray() in the driver. (Yang Luo)
    - Fixed the BSoD that occurs when PacketReceivePacket() is called with a NULL buffer. (Yang Luo)
    - Bumped the verion to "0.09 r5". (Yang Luo)
    - Re-enabled the "FWP_CONDITION_FLAG_IS_REASSEMBLED" flag by setting the driver's OS platform to Vista SP1. This can solve the duplicated loopback packets issue. (Yang Luo)
    - Bumped the verion to "0.09 r4". (Yang Luo)
    - Fixed the driver's support for Vista. (Yang Luo)
    - Prepared to use WoSign to sign the .sys files too. (Yang Luo)
    - Used WoSign to timestamp the non-.sys files. (Yang Luo)
    - Removed the useless sign_file functions in the deploy script. (Yang Luo)
    - Updated the docs and README about the DiagReport's requirement on PowerShell for Vista users. (Yang Luo)
    - Made the WiFi version LWF install an option in NPFInstall.exe. (Yang Luo)
    - Bumped the verion to "0.09 r3". (Yang Luo)
    - Added back Vista's support. (Yang Luo)
    - Removed NSIS function code redundancy by sharing functions between installer and uninstaller. (Yang Luo)
    - Refactored out the "sha2_signed" variable in the installer. (Yang Luo)
    - Fixed the driver service name error for NDIS 5 driver installation. (Yang Luo)
    - Refactored out the "ndis6_driver" variable in the installer. (Yang Luo)
    - Bumped the verion to "0.09 r2". (Yang Luo)
    - DiagReport has added different install path support. (Yang Luo)
    - The uninstaller will show the right install path in the first page. (Yang Luo)
    - Removed the unused GetProductVersion() function in the installer. (Yang Luo)
    - The uninstaller can uninstall on the correct path based on registry's "UninstallPath" now. (Yang Luo)
    - Refactored the registry code in the installer. (Yang Luo)
    - Removed the version check's dependence on NPFInstall.exe in the uninstall process, it will check registry now instead. (Yang Luo)
    - The installation path can be modified by the "/D=XXX" command-line parameter. (Yang Luo)
    - Updated DiagReport usage in docs and README. (Yang Luo)
    - Bumped the verion to "0.09". (Yang Luo)
    - Removed the DiagReport files when Npcap uninstalls. (Yang Luo)
    - Added "PowerShell version" and "script path" display in DiagReport. (Yang Luo)
    - Improved the output format in DiagReport. (Yang Luo)
    - Excluded DiagReport.txt from Git. (Yang Luo)
    - Redirected the output to file: DiagReport.txt (Yang Luo)
    - Made DiagReport always exits automatically. (Yang Luo)
    - Refactored out write_report() function in DiagReport. (Yang Luo)
    - Added Npcap version display in DiagReport. (Yang Luo)
    - Made useless windows disappear in DiagReport. (Yang Luo)
    - Improved the current directory recognization for DiagReport. (Yang Luo)
    - Added Non-Admin running support for DiagReport. (Yang Luo)
    - Fixed the bug that get_os_bit() in DiagReport is not correct for some systems. (Yang Luo)
    - Rolled back to the original DigiCert timestamp service because the WoSign signed binaries can't be recognized by Win8.1 x64. (Yang Luo)
    - Bumped the revision number to "0.08 r10". (Yang Luo)
    - Added install info to DiagReport. (Yang Luo)
    - Fixed the bug that the scripts fail to run in path with blank spaces. (Yang Luo)
    - Removed the no-timestamp deploy scripts. (Yang Luo)
    - Packaged DiagReport into the installer. (Yang Luo)
    - Updated DiagReport to support registry reading. (Yang Luo)
    - Created a diagnostic report tool called DiaReport. (Yang Luo)
    - Improved the NPF_RegisterOptions() call in the driver. (Yang Luo)
    - Improved the trace message of the NdisFRegisterFilterDriver() call in the driver. (Yang Luo)
    - Refactored out the NPF_registerLWF() function in the driver. (Yang Luo)
    - Updated NPFInstall.exe to install two services for one binary. (Yang Luo)
    - Bumped the revision number to "0.08 r9". (Yang Luo)
    - Fixed the service section error in INFs. (Yang Luo)
    - Removed the “Would you like to install this device software?” prompt also for Win7. (Yang Luo)
    - Disabled the WoSign's timestamp RFC3161 use for now, because the OS complains the signature error. (Yang Luo)
    - Used WoSign timestamp servers for signing the code. (Yang Luo)
    - Improved the format of the INFs. (Yang Luo)
    - Removed Vista in the build scripts. (Yang Luo)
    - Modified the INFs to support the fake service way described here: http://stackoverflow.com/questions/39149099/two-filter-drivers-in-one-binary-causes-system-error-2-on-the-2nd-driver (Yang Luo)
    - Removed the WiFi mode in the installer. (Yang Luo)
    - Removed the WiFi mode in NPFInstall.exe. (Yang Luo)
    - Refactored the UninstallDriver() function in the NPFInstall.exe. (Yang Luo)
    - Dropped the support for Vista, because it's no longer used by people. (Yang Luo)
    - Updated the docs about the driver installation log. (Yang Luo)
    - Used a different "AppName" for WiFi version driver in NPFInstall.exe. (Yang Luo)
    - Used "RegistryPath" to determine "g_Dot11SupportMode" in the driver. (Yang Luo)
    - Improved the error message of NdisFRegisterFilterDriver() in the driver. (Yang Luo)
    - Updated the installer to support the new WiFi mode. (Yang Luo)
    - Fixed the PNP device ID error in INFs. (Yang Luo)
    - Updated the NetCfgInstanceId in the WiFi driver's INF files. (Yang Luo)
    - Used different names for the Wi-Fi driver. (Yang Luo)
    - Improved the definition of "g_NPF_PrefixBuffer_Wifi" in the driver. (Yang Luo)
    - Simplified the definition of macro names in NPFInstall. (Yang Luo)
    - Updated NPFInstall.exe and the installer for the new Wi-Fi support. (Yang Luo)
    - Separated out the WiFi driver. It uses the adapter name "\Device\NPCAP_WIFI_{XX}" instead of the original "\Device\NPCAP_{XX}". (Yang Luo)
    - Bumped the revision number to "0.08 r8". (Yang Luo)
    - Improved the deploy system to support the revision number. (Yang Luo)
    - Updated the driver debug version to 0.08 r7. (Yang Luo)
    - Fixed the issue that pcap_open_live() did not accept device names starting with "rpcap://". (Yang Luo)
    - Improved the docs about the "enforced" value. (Yang Luo)
    - Forced the DLT_NULL option to be selected in the installer. (Yang Luo)
    - Fixed a bug on DLT_NULL mode sending in the driver. (Yang Luo)
    - Fixed the bug that Nmap doesn't work with DLT_NULL mode. (Yang Luo)
    - Improved the format of the loopback sending code. NBLs are still needed to be regarded as Ethernet packets. (Yang Luo)
    - Improved the debug print format by adding "\n" in the driver. (Yang Luo)
    - Combined two Ethernet header definitions in the driver. (Yang Luo)
    - Libpcap version can be automatically generated based on the source. (Yang Luo)
    - Updated the docs about the Dynamic link library (DLL) log. (Yang Luo)
    - Fixed the debug log mode of Packet.dll. Need to define "_DEBUG_TO_FILE". The log path is: C:\Program Files\Npcap\Packet.log (Yang Luo)
    - Removed the pcap_get_servicename() description in the docs, because it's no longer supported by wpcap.dll. (Yang Luo)
    - Disabled the "Raw 802.11" install option by default, it can only be re-enabled via the command-line parameter. (Yang Luo)
    - Npcap will delete the installation log when Npcap uninstalls. (Yang Luo)
    - Added the installation log: "C:\Program Files\Npcap\install.log" and improved the docs and README. (Yang Luo)
    - Updated the README about the updated build instructions. (Yang Luo)
    - Removed the “Would you like to install this device software?” prompt in the installer. (Yang Luo)
    - Updated the docs about Win flex-bison. (Yang Luo)
    - The NSIS and deploy scripts can directly retrieve the version strings from version.h now, no need to manually define them any more. (Yang Luo)
    - Updated libpcap to the MSVC-warning-free version. (Yang Luo)
    - The installer options can be disabled by command-line parameters now. (Yang Luo)
    - Improved docs about the description of the DLT_NULL mode. (Yang Luo)
    - Reworded the dialog to "Npcap version 0.XX is already installed. Reinstall (possibly with different options)?" and "No" would be by default. (Yang Luo)
    - Made the defaultly selected "loopback_support" and "dlt_null" options prior to the "admin_only" option in the installer. (Yang Luo)
    - Renamed "options_admin_only.ini" to "options.ini". (Yang Luo)
    - Moved the "Automatically start the Npcap driver at boot time" option to the options page. (Yang Luo)
    - Fixed all the "Code Analysis" warnings of the driver for the x86 configuration. (Yang Luo)
    - Fixed all the "Code Analysis" warnings of the driver for the x64 configuration. (Yang Luo)
    - Ignored some SDV intermediate files. (Yang Luo)
    - Fixed the SDV error: "SDV encountered errors when building the driver." by removing the "\"" include. (Yang Luo)
    - [libpcap] Improved the libpcap version system. (Yang Luo)
    - Added filters file to the driver project. (Yang Luo)
    - Removed the deprecated DDK build way. (Yang Luo)
    - Fixed the SDV error: "SDV could not detect the NDIS version of this driver." by defining "NDIS620=1" in the preprocessor. (Yang Luo)
    - Renamed "NPcap" folders to "Npcap". (Yang Luo)
    - Renamed "NPcap" files to "Npcap". (Yang Luo)
    - Renamed all "NPcap" to "Npcap". (Yang Luo)
    - [libpcap] Correct the pcap version to the latest "1.8.0". (Yang Luo)
    - Improved the "Properties" -> "Details" for all the binaries. (Yang Luo)
    - Updated the solution version to VS 2013 for Packet and NPFInstall projects. (Yang Luo)
    - Bumped the verion to "0.08". (Yang Luo)
    - Updated the scripts for the new libpcap code. (Yang Luo)
    - Added the libpcap code as a submodule of Npcap. (Yang Luo)
    - Removed the original libpcap 1.0 source files. (Yang Luo)
    - Defined the NDIS620 macro for the driver on Win7 and later. (Yang Luo)
    - Added "Win7 Release SDV" configuration to the driver for the SDV analysis. (Yang Luo)
    - Declared WDM function via function role types. This is for the Static Driver Verifier (SDV) analysis. (Yang Luo)
    - Declared NDIS filter function via function role types. This is for the Static Driver Verifier (SDV) analysis. (Yang Luo)
    - Fixed the bug that NPF_GetRegistryOption_String() is undefined when loopback feature is disabled. (Yang Luo)
    - Separated the "bIPv4" flags of WSK and WFP in the driver's loopback code. (Yang Luo)
    - Improved the format of the driver's loopback handling code. (Yang Luo)
    - Remove Npcap Users section (Fyodor)
    - Fixed the bug that the loopback adapter is not working. (Yang Luo)
    - Added the "Dot11" option to the driver, this option can be modified in registry. (Yang Luo)
    - Removed pcap-int.h from Npcap SDK. (Yang Luo)
    - Updated the docs about how to use Npcap first. (Yang Luo)
    - Updated the version string of NPcapHelper project from VS2010 to VS2013. (Yang Luo)
    - Fixed all the warnings in the NPFInstall project. (Yang Luo)
    - Improved the debug trace of the driver. (Yang Luo)
    - Added build driver scripts. (Yang Luo)
    - Added the no-timestamp deploy scripts. (Yang Luo)
    - Made pcap_set_timeout() function work even after the pcap device is opened. This patch is for the issue: https://github.com/nmap/nmap/issues/426 (Yang Luo)
    - Fixed an error in the deploy symbols script. (Yang Luo)
    - Fixed a wpcap project C++ compiler error on VS2013. (Yang Luo)
    - Fixed the bug reported by Pascal that the driver doesn't have the loopback feature enabled in the first run. (Yang Luo)
    - Improved the debug logging of NPF_GetRegistryOption_XXX functions in the driver. (Yang Luo)
    - Fixed the "WinPcapCompatible" reg value setting error. (Yang Luo)
    - Added pcap-int.h to Npcap SDK. (Yang Luo)
    - Do not add Npcap folder to PATH in Npcap mode any more. (Yang Luo)
    - NPFInstall.exe can add and remove "C:\Windows\System32\Npcap" in PATH now. (Yang Luo)
    - Improved the docs about Npcap mode. (Yang Luo)
    - Made Packet.dll's dependency on wlanapi.dll dynamically linked, so software loading Packet.dll will not fail to launch on some systems (like Win2008) that has no wlanapi.dll. (Yang Luo)
    - Made NPFInstall.exe's dependency on wlanapi.dll dynamically linked, so NPFInstall.exe will not fail to launch on some systems (like Win2008) that has no wlanapi.dll. (Yang Luo)
    - Improved the command lines of WlanHelper. (Yang Luo)
    - Fixed the bug that the 1st "npf" driver can't be properly uninstalled in new WinPcap compatible mode. (Yang Luo)
    - Fixed the bug that NPFInstall2.exe window is not hided. (Yang Luo)
    - Differentiated the two driver descriptions. (Yang Luo)
    - Made the NPFInstall.exe tool able to echo the feedback instead of flashing out immediately. (Yang Luo)
    - Improved the -h page of NPFInstall.exe to conform with Nmap tool. (Yang Luo)
    - Improved the -h page of WlanHelper to conform with Nmap tool. (Yang Luo)
    - Fixed the 32bit files copy error in the installer. (Yang Luo)
    - Updated the npcap service name in installer. (Yang Luo)
    - Updated logo v2. (Yang Luo)
    - Updated the SDK to the docs. (Yang Luo)
    - Fixed the "softwares" typos in the docs. (Yang Luo)
    - If "C:\Windows\System32\Npcap" is already in PATH before installation, Npcap installer will not add or remove it. (Yang Luo)
    - Refactored the envvar setting functions in the installer. (Yang Luo)
    - Fixed the typos in README. (Yang Luo)
    - Used another NetCfgInstanceId for Npcap mode driver, so two drivers can coexist. (Yang Luo)
    - Improved the driver state text of the installer. (Yang Luo)
    - Used another way to rename NPFInstall.exe. (Yang Luo)
    - Fixed the bug that NPFInstall.exe can't run well in Npcap mode. (Yang Luo)
    - Finished part of the new WinPcap mode (3rd). (Yang Luo)
    - Refactored out the install and uninstall driver code in the installer. (Yang Luo)
    - Finished part of the new WinPcap mode (2nd). (Yang Luo)
    - Removed "driver_name" var in the installer script. (Yang Luo)
    - Finished part of the new WinPcap mode. (Yang Luo)
    - Improved the $winpcap_mode conditions in the installer. (Yang Luo)
    - Refactored the copy_win7_XXbit_driver() functions in the installer. (Yang Luo)
    - Rewrote all the installer code with LogicLib. (Yang Luo)
    - Improved the code format of the installer. (Yang Luo)
    - Rewrote the registerServiceAPI() code in the installer. (Yang Luo)
    - Refactored the uninstall DLLs and EXEs code in the installer. (Yang Luo)
    - Refactored out 3 functions about uninstalling files in the installer. (Yang Luo)
    - refactored out 4 uninstall functions in the installer. (Yang Luo)
    - Refactored the uninstall code of the installer. (Yang Luo)
    - Refactored out the write_registry_service_options() function in the installer. (Yang Luo)
    - Refactored out the write_registry_software_options() function in the installer. (Yang Luo)
    - Refactored out the copy_win7_xxbit_home_dlls() functions in the installer. (Yang Luo)
    - Improved the installer script code format by using identation. (Yang Luo)
    - Refactored out the copy_xp_32bit_home_dlls() function in installer. (Yang Luo)
    - Refactored the copy file code in the installer. (Yang Luo)
    - Fixed the installer errors caused by XP files relocation. (Yang Luo)
    - Refactored the installer script. (Yang Luo)
    - Fixed the no file updated bug in Deploy.ps1. (Yang Luo)
    - Added the original XP wpcap.dll files. (Yang Luo)
    - Relocated the XP Packet.dll files. (Yang Luo)
    - Improved the location of XP DLLs and drivers. (Yang Luo)
    - Refactored out the checkWindowsVersion() function in installer. (Yang Luo)
    - Refactored out the uninstallWinPcap() function in installer. (Yang Luo)
    - Fixed the adapter name problem in WlanHelper. (Yang Luo)
    - Made Npcap be able to uninstall WinPcap instead of just prompting it. (Yang Luo)
    - Improved the format of README. (Yang Luo)
    - Improved the wording of the installer. (Yang Luo)
    - Updated README with building SDK commands. (Yang Luo)
    - Renamed "build_npdpack" files to "build_sdk". (Yang Luo)
    - Updated "NpdPack" string to "npcap-sdk". (Yang Luo)
    - Fixed a typo in README. (Yang Luo)
    - Updated README about the user software list. (Yang Luo)
    - Updated README about SDK. (Yang Luo)
    - The script will build a zip package for SDK now. (Yang Luo)
    - Renamed "build_wpdpack" files to "build_npdpack". (Yang Luo)
    - Updated "WpdPack" string to "NpdPack". (Yang Luo)
    - Added Npcap docs to SDK. (Yang Luo)
    - Fixed the string display flaw in WlanHelper interactive mode. (Yang Luo)
    - Now Npcap can generate its own SDK (Npcap mode) by running "build_wpdpack.bat". (Yang Luo)
    - Updated Npcap logo with Calibri font. (Yang Luo)
    - Reduced the size of the Npcap logo. (Yang Luo)
    - Updated Npcap logo in GitHub README. (Yang Luo)
    - Fixed the issue reported by ekkolord that disabling ethernet while using npcap causes system freeze: https://github.com/nmap/nmap/issues/391. (hsluoyz)
    - Set the initial value for monitor mode in wpcap.dll. (hsluoyz)
    - The installer will create "Dot11Adapters" value in registry now. (hsluoyz)
    - Renamed reg values: "Loopback" -> "LoopbackAdapter" in Packet.dll. (hsluoyz)
    - Renamed reg values: "Loopback" -> "LoopbackAdapter", "SendToRx" -> "SendToRxAdapters", "BlockRx" -> "BlockRxAdapters". (hsluoyz)
    - Improved the return strings of NPFInstall.exe. (hsluoyz)
    - Fixed the bug that two "\\Device\\" are added in the "Dot11Adapters" reg key. (hsluoyz)
    - Added "-wlan_write_reg" function to NPFInstall.exe. (hsluoyz)
    - Fixed the RegUtil.cpp macro compile error in NPFInstall.exe. (hsluoyz)
    - Rewrote the key names with _T macro in NPFInstall.exe. (hsluoyz)
    - Extracted the registry-related function out in NPFInstall.exe. (hsluoyz)
    - Improved LoopbackRecord.cpp code in NPFInstall.exe with _T macro. (hsluoyz)
    - Refactored out the WriteStrToRegistry() function in NPFInstall.exe. (hsluoyz)
    - Added wireless adapter check in the installer, but commented for now because it's so slow. (hsluoyz)
    - Improved the console title of WlanHelper. (hsluoyz)
    - Improved the -h page format of NPFInstall.exe. (hsluoyz)
    - Added "-wlan_check" option to check if there are any wireless adapters in NPFInstall.exe (hsluoyz)
    - Fixed the -h page compile error in unicode mode for WlanHelper. (hsluoyz)
    - Fixed many compile errors in unicode mode for WlanHelper. (hsluoyz)
    - Fixed the issue that some strings are not wrapped with _T() macro in WlanHelper. (hsluoyz)
    - Improved the string compare format of NPFInstall.exe. (hsluoyz)
    - Improved the driver name reference with macro instead of "NPF" in WlanHelper. (hsluoyz)
    - Changed the packet.dll importing of WlanHelper tool into LoadLibrary way, this removes WlanHelper's dependence on packet.dll. (hsluoyz)
    - Improved the PacketIsMonitorModeSupported() function to return more detailed errors. (hsluoyz)
    - Improved the PacketSetMonitorMode() function to return more detailed errors. (hsluoyz)
    - Npcap will switch back to managed mode after closing the pcap_t if it switches it on when capturing. (hsluoyz)
    - Added PacketGetMonitorMode() function to Packet.dll. (hsluoyz)
    - Added adapter name display in WlanHelper interactive mode. (hsluoyz)
    - Improved the code with the "_T" macro in WlanHelper. (hsluoyz)
    - Added the getAdapterNameFromGuid() function to WlanHelper. (hsluoyz)
    - WlanHelper: Allow to use --help for help too. (Mister X)
    - WlanHelper: Added spacing for clarity in help screen (Mister X)
    - WlanHelper: Added another example using interface name. (Mister X)
    - WlanHelper: Channel and Frequency is not limited to those values (Mister X)
    - WlanHelper: Fixed typos in help screen. (Mister X)
    - Added the examples to the docs. (hsluoyz)
    - Fixed the typo in the docs. (hsluoyz)
    - Added the "How to detect what version Npcap/WinPcap you are using?" section to the docs. (hsluoyz)
    - Added some options to be shown in the service registry key. (hsluoyz)
    - Added pcap_get_servicename() function in wpcap.dll to return the Npcap service name, it returns "NPF" for WinPcap compatible mode and "NPCAP" for Non-WinPcap compatible mode. (hsluoyz)
    - Fixed the Driver Verifier BSoD reported by Daniel Miller that MmProbeAndLockPages() call fails in some conditions in the driver. (hsluoyz)
    - Used adapter name instead of adapter object as the parameter of PacketIsMonitorModeSupported(), because at that time, PacketOpenAdapter() is not called yet. (hsluoyz)
    - Used adapter name instead of adapter object as the parameter of PacketSetMonitorMode(), because at that time, PacketOpenAdapter() is not called yet. (hsluoyz)
    - Exported the pcap_set_rfmon() function in wpcap.dll. (hsluoyz)
    - Exported the pcap_can_set_rfmon() function in wpcap.dll, so it could be called by Wireshark. (hsluoyz)
    - Added set monitor mode call in wpcap.dll. (hsluoyz)
    - Fixed most compile warnings in Packet.dll. (hsluoyz)
    - Added PacketSetMonitorMode() function to Packet.dll. (hsluoyz)
    - Fixed a compile warning in Packet.dll. (hsluoyz)
    - Added PacketIsMonitorModeSupported() function to Packet.dll and made wpcap.dll call it. (hsluoyz)
    - Added checking rfmon mode function for wpcap.dll, not finished yet. (hsluoyz)
    - Added the check monitor-mode function to WlanHelper. (hsluoyz)
    - Added GetCurrentPhyID() function to WlanHelper. (hsluoyz)
    - Added GetDesiredPhyList() function to WlanHelper. (hsluoyz)
    - Updated README about the development kit. (Yang Luo)
    - Updated the docs about Npcap native mode. (hsluoyz)
    - Added back the build instructions to README. (Yang Luo)
    - Updated README about features. (Yang Luo)
    - Removed most details in README, the details are available in the docs. (Yang Luo)
    - Updated the HTML version docs. (hsluoyz)
    - Updated docs to be the same with the README version. (hsluoyz)
    - Updated README about the section of Installation Issues. (Yang Luo)
    - Added listing all supported modulations function in Wlanhelper. (hsluoyz)
    - Refactored the three makeOIDRequest() functions into one in WlanHelper. (hsluoyz)
    - Updated README about WlanHelper usage. (Yang Luo)
    - Used the WlanSetInterface API to set operation mode for now because our OID way still didn't work. (hsluoyz)
    - Added the error display of PacketRequest function for WlanHelper. (hsluoyz)
    - Fixed another string display bug in WlanHelper. (hsluoyz)
    - Fixed a string display bug in WlanHelper. (hsluoyz)
    - Improved the error log of WlanHelper. (hsluoyz)
    - Added getting all supported operation modes function for WlanHelper. (hsluoyz)
    - Added examples to WlanHelper man page. (hsluoyz)
    - Made the version of WlanHelper man automatically changable. (hsluoyz)
    - Improved the man page of WlanHelper. (hsluoyz)
    - Added getting and setting frequency functions for WlanHelper. (hsluoyz)
    - Added setting channel function for WlanHelper. (hsluoyz)
    - Added getting channel function for WlanHelper. (hsluoyz)
    - Refactored out the operation mode - strng functions in WlanHelper. (hsluoyz)
    - Added GetCurrentOperationMode() and SetCurrentOperationMode() functions to directly send OID requests. (hsluoyz)
    - Rewrote some functions of WlanHelper in C++ string. (hsluoyz)
    - Refactored out the getGuidFromAdapterName_Wrapper() function of WlanHelper. (hsluoyz)
    - Rewrote the WlanHelper in C++ string. (hsluoyz)
    - Added makeOIDRequest_DOT11_CURRENT_OPERATION_MODE() function to WlanHelper. (hsluoyz)
    - Added makeOIDRequest() function to WlanHelper. (hsluoyz)
    - Changed the executeCommand() call to TCHAR version in WlanHelper. (hsluoyz)
    - Now adapter name can be used as the parameter in WlanHelper tool. (hsluoyz)
    - Added NPF_GetCurrentFrequency() function to the driver. (hsluoyz)
    - Added NPF_GetCurrentChannel() function to the driver. (hsluoyz)
    - Improved the format of internal OID request calls. (hsluoyz)
    - Added the NPF_GetCurrentOperationMode() function to the driver. (hsluoyz)
    - Refactored the OID request calls in the driver. (hsluoyz)
    - Updated the executable version from "0.7.0.424" to "5.0.7.424", this will help Npcap be regarded as a later release than WinPcap 4.1.3 ("4.1.0.2980") by the WinPcap installer. (hsluoyz)
    - Made "WinPcap Compatible Mode" OFF the default option in the installer. (hsluoyz)
    - Removed the "Nmap" string in the installer. (hsluoyz)
    - Corrected the copyright string of the installer. (hsluoyz)
    - Added Npcap docs based on DocBook XML. (hsluoyz)
    - Updated README about the list of incompatible softwares. (Yang Luo)
    - Updated README about the new installation option. (Yang Luo)
    - Updated README about the -wifi version driver. (Yang Luo)
    - Bumped the verion to "0.07". (hsluoyz)
    - Fixed the compile error in Packet.dll caused by -wifi installation code. (hsluoyz)
    - Added the -wifi option to the installer. (hsluoyz)
    - Added "-i2" option to NPFInstall.exe to install -wifi version driver. (hsluoyz)
    - The uninstaller will delete -wifi INF files now. (hsluoyz)
    - Added the -wifi version INF files. (hsluoyz)
    - Improved the output of the deploy script. (hsluoyz)
    - Integrated the only generating installer function into the new deploy script. (hsluoyz)
    - Removed useless items in the wfp INF files. (hsluoyz)
    - Improved the output of the deploy script. (hsluoyz)
    - Fixed modified file count bug in the deploy script. (hsluoyz)
    - Updated the All_In_One script. (hsluoyz)
    - Updated README with new deploy commands. (Yang Luo)
    - Updated README about the Nmap's support wording. (Yang Luo)
    - Rewrote the deploy symbols function via PowerShell. (hsluoyz)
    - Added entrance bat for debug deployment. (hsluoyz)
    - Added Deploy.bat as the startup for deployment script. (hsluoyz)
    - Added debug deploy function to deploy script. (hsluoyz)
    - Rewrote the deployment script using PowerShell. (hsluoyz)
    - Removed the cleanup issue in README because it's fixed in Npcap 0.06 r19. (hsluoyz)
    - Added "NPFInstall.exe -c" command to clear driver store cache in the installer, this can clear the -wifi version Npcap's remaining effect after uninstallation. (hsluoyz)
    - Refactored the executeCommand function in NPFInstall. (hsluoyz)
    - Added WlanHelper usage to README. (Yang Luo)
    - Updated the location of WlanHelper in README. (Yang Luo)
    - added WlanHelper to the build and deploy process. (hsluoyz)
    - Added WlanHelper project into Npcap code base. (hsluoyz)
    - Removed the "WithTimestamp" string in deploy scripts. (hsluoyz)
    - Fixed the BSoD of NdisFOidRequest function reported by Vince. (hsluoyz)
    - Updated the usage of WlanHelper tool in README. (Yang Luo)
    - Updated README about redistribution. (Yang Luo)
    - Updated README about the known cleanup issue of -wifi version Npcap. (Yang Luo)
    - Added 802.11 support to Features in README. (Yang Luo)
    - Added some descs about 802.11 for README. (Yang Luo)
    - Replaced wrong used "OrIf" with "ElseIf" in the installer. (hsluoyz)
    - Fixed a bug that when reinstalling Npcap, all options will be checked by default. (hsluoyz)
    - Default options of the installer GUI can be changed when running the installer with specific command line parameters. (hsluoyz)
    - Refactored out the getInstallOptions function in the installer. (hsluoyz)
    - Improved the NSIS prerequisite in README. (Yang Luo)
    - Updated deploy scripts to use the new certificate to sign the files. (hsluoyz)
    - Fixed some typos for README. (Yang Luo)
    - Now "FCS at end" bit of Radiotap "Flags" is determined by DOT11_RECV_FLAG_RAW_PACKET, checking this flag is equivalent of checking the monitor mode. (hsluoyz)
    - Improved the indication of Radiotap "Channel"->"Frequency" in the driver. (hsluoyz)
    - Added automatic padding function NPF_AlignProtocolField() for radiotap padding calculation, so no need to manually set padding any more. (hsluoyz)
    - Added the description of size and alignment for Radiotap fields. (hsluoyz)
    - Fixed a typo in the packet filter assignment. (hsluoyz)
    - Used macro definitions for some radiotap fields. (hsluoyz)
    - Added code to set NDIS_PACKET_TYPE_802_11_RAW_DATA and NDIS_PACKET_TYPE_802_11_RAW_MGMT in the packet filter for 802.11 wireless adapters. (hsluoyz)
    - Added the protection code to prevent radiotap's "Rate" field from being overflowed. (hsluoyz)
    - Finished the NPF_LookUpDataRateMappingTable function. (hsluoyz)
    - Enabled the "HAVE_DOT11_SUPPORT" macro in the driver project file. (hsluoyz)
    - Finished some work about adding radiotap "Rate" field, and made all 802.11 code wrapped in a macro called "HAVE_DOT11_SUPPORT". (hsluoyz)
    - Fixed some bugs about radiotap header construction. (hsluoyz)
    - Indicated 802.11 packets with radiotap headers by returning NdisMediumRadio80211 instead of NdisMediumBare80211. (hsluoyz)
    - Actually supplied the 802.11 packets with the Radiotap header now, and fixed a small bug to use IEEE80211_RADIOTAP_XXX macros as bitmask. (hsluoyz)
    - Added 802.11 radiotap header constructing code to the driver's packet receive function, not finished. (hsluoyz)
    - Updated README by adding the new link of Nmap for Npcap. (Yang Luo)
    - Fix typo: besdies -> besides (Fyodor)
    - Fixed the captured incorrect packet length (usually 2048) bug on VirtualBox VMs. (hsluoyz)
    - Improved the trace print of NPF_TapExForEachOpen function in the driver. (hsluoyz)
    - Updated the official site to README. (Yang Luo)
    - Fixed the bug that the driver project won't generate .cat files in the Package folder under "Debug | x64" configuration. (hsluoyz)
    - Improved the debug print for the NPF_EqualAdapterName function, we only print the most useful info here. (hsluoyz)
    - Print unicode strings using %ws will cause page fault blue screen with IRQL = DISPATCH_LEVEL, so we disable the string print for now. (hsluoyz)
    - Improved the debug text print for the FilterAttach routine in the driver. (hsluoyz)
    - Disable this code for now, because it invalidates most adapters to be bound, reason needs to be clarified. (hsluoyz)
    - Added some code to prevent the driver from binding to other altitudes than exactly over the miniport (for monitoring filter). (hsluoyz)
    - Improved the logic of FilterAttach routine in the driver. (hsluoyz)
    - Added native 802.11 capture support to Npcap driver. (hsluoyz)
    - Updated the NPF_EqualAdapterName function to not change the strings. Not using memcpy function will help the driver install on Win7 x86. (hsluoyz)
    - Removed the desc about non-timestamp deploy scripts. (Yang Luo)
    - Updated the installer to pack the Win7 drivers individually. (hsluoyz)
    - Updated the deploy scripts to sign the Win7 drivers individually. (hsluoyz)
    - We don't maintain the none-timestamp deploy scripts any more, because some OSs like Win10 are likely to reject the drivers signed without timestamp. (hsluoyz)
    - Improved the loopback handling logic for Vista. (hsluoyz)
    - Used NonPagedPool for adapter names, this could prevent BSoD in the NPF_EqualAdapterName function. (hsluoyz)
    - Fixed the possible BSoD of ring buffer copy in NPF_TapExForEachOpen function. (2nd) (hsluoyz)
    - Fixed the BSoD of memory copy in the Npcap packet read function. (hsluoyz)
    - Used RtlEqualMemory instead of RtlEqualUnicodeString in NPF_EqualAdapterName call because of IRQL. (hsluoyz)
    - Improved the debug info printing in the driver. (hsluoyz)
    - Rewrite the ring buffer code in NPF_TapExForEachOpen function. Now pcap_set_snaplen() works well. (hsluoyz)
    - Improved the log of the NPF_TapExForEachOpen function. (hsluoyz)
    - Added the debug deploy script. (hsluoyz)
    - Added some debug traces to the Npcap driver. (hsluoyz)
    - Fixed the debug compile error for the driver. (hsluoyz)
    - Workarounded the SYSTEM_SERVICE_EXCEPTION BSoD caused by NdisFOidRequest call by hard-coding the MTU to 1514 for now, wait for better solutions. (hsluoyz)
    - Added an "All-In-One" script that can build, deploy, generate installer in one click. (hsluoyz)
    - Rolled back the commit 5ca09052, because it will cause no adapters found sometimes as a result of case-sensitive comparison. (hsluoyz)
    - Improved the format of the NPF_GetDeviceMTU call. (hsluoyz)
    - Improved the .gitignore file. And added back the Visual Studio filter files. (hsluoyz)
    - Used RtlEqualMemory instead of EtlEqualUnicodeString because of the dispatch IRQL. (hsluoyz)
    - Left the "VLAN support" option unchecked by default in the installer. (hsluoyz)
    - Improved the driver memory usage by using ExAllocatePoolWithTag call. (hsluoyz)
    - Improved the adapter name compare function using the standard RtlEqualUnicodeString call. (hsluoyz)
    - Fixed the bug reported by zdm that Npcap can't see VMware VMNet adapters. (hsluoyz)
    - Updated the license of README. (Yang Luo)
    - Improved the wording of README. (Yang Luo)
    - Improved README about the build commands. (hsluoyz)
    - Fix filename of new WinPcap-License/Acknowledgements file (Fyodor)
    - Rename Winpcap-License-And-Acknowledgements.txt to WinPcap-License-And-Acknowledgements.txt (Fyodor)
    - Create Winpcap-License-And-Acknowledgements.txt (Fyodor)
    - Revert to "all rights reserved license" (Fyodor)
    - Now Npcap can change options for silent installation (with "/S"). (hsluoyz)
    - Fixed the bug reported by Markpizz that the network startup delays for up to 60s when rebooted after uninstalling Npcap. (hsluoyz)
    - Fixed the BSoD reported by Vince Luff by adding lock to adapter list structure in the driver. (hsluoyz)
    - Truncated the option text in the installer, because it will not show in a single line on some systems. (hsluoyz)
    - Rolled back the change of https://github.com/nmap/npcap/commit/61ecc19832c775178f8b32ae0c88ab0b563db3ae because I can't find a way to let the uninstallation window not close itself too quickly. (hsluoyz)
    - Rephrased the uninstallation failure message text. (hsluoyz)
    - Rephrased the wording of restore points in the installer. (hsluoyz)
    - Disabled creating restore point in the uninstaller for now, because this will cause the uninstaller to halt. (hsluoyz)
    - Added the function of creating a system restore point when Npcap uninstalls. (hsluoyz)
    - Rephrased the name of the system restore point created by Npcap, added the version number. (hsluoyz)
    - Disabled the function of deleting the system restore point for now. This is because not many softwares delete restore points, this job should be done by users themselves. (hsluoyz)
    - Removed the creating restore point option, made this function mandatory suggested by Markpizz. (hsluoyz)
    - Made creating restore point option in the installer checked by default. (hsluoyz)
    - Added description about the dependency between wpcap.sln and Packet.sln. (hsluoyz)
    - Improved the wording of the loopback option in the installer. (hsluoyz)
    - Made the loopback feature optional in the installer suggested by Markpizz. (hsluoyz)
    - Updated Npcap version to 0.06. (hsluoyz)
    - Fixed the BSoD issue reported by yyjdelete, this bug is because the NPF_Pause routine doesn't handle correctly to stop sending packets when the adapter is being disabled. (hsluoyz)
    - Added creating system restore point feature to the installer, not enabled by default. (hsluoyz)
    - Fixed the PAGE_FAULT_IN_NONPAGED_AREA BSoD reported by Vince Luff caused by illeagal memory read in NPF_CompareAdapterName function. (hsluoyz)
    - Updated README by adding packaging PDB files instructions. (Yang Luo)
    - Added the scripts to make a zip of all PDB files, named npcap-nmap-<Version>-<Revision>-DebugSymbols.zip. This will help debugging old versions of Npcap binaries. (hsluoyz)
    - Updated wcscpy calls in the driver to wcscpy_s for better security. (hsluoyz)
    - Aimed at fixing the ATTEMPED_EXECUTE_OF_NOEXECUTE_MEMORY BSoD reported by yyjdelete, still has problems. (hsluoyz)
    - Update README.md (Yang Luo)
    - Used the legacy SHA1 code signing cert to sign the Npcap driver in Win7, so no need for Win7 users to installl KB3033929 patch any more. (hsluoyz)
    - Updated the build badge to use AppVeyor. (Yang Luo)
    - Improved the macros in the installer deploy script. (hsluoyz)
    - Improved the macros in the deploy scripts. (hsluoyz)
    - Added driver signing commands to the legacy deploy scripts. (hsluoyz)
    - Added AppVeyor CI Integration. (hsluoyz)
    - Changed to build Packet project prior to wpcap, because wpcap's building depends on Packet's output. (hsluoyz)
    - Updated Build.bat for building the driver. (hsluoyz)
    - Updated the installer to use the same MIT license as the source code does. (hsluoyz)
    - Remove trailing whitespace (Graham Bloice)
    - Remove symbol redefinition on VS2015 (Przemek Komosa)
    - Updated the README about Win7's driver signing problem. (Yang Luo)
    - Removed trailing whitespace (Graham Bloice)
    - Fix NPF_OpenDumpfile Code analysis warning (Graham Bloice)
    - Used legacy SHA1 cert for signing Vista drivers, because Vista doesn't recognize the SHA256 cert. (hsluoyz)
    - Remove dependency on MFC (Przemek Komosa)
    - Fixed the compiling error of wpcap.dll project for MSVC 2015. (hsluoyz)
    - Changes necessary to be able to switch to VS2015 (Przemek Komosa)
    - Made Send-to-Rx and Block-Rx features together under HAVE_RX_SUPPORT macro. (hsluoyz)
    - Defined the adapter name size 47 as ADAPTER_NAME_SIZE_WITH_SEPARATOR macro to improve readability. (hsluoyz)
    - Improved the deploy scripts, so no need to manually create the deploy folders any more. (hsluoyz)
    - Update packaging instructions. (hsluoyz)
    - Signed the installer with better signature method. (hsluoyz)
    - Added the Block-Rx feature to Npcap driver, adapters in Block-Rx mode will be blocked from any received traffic, except the injected packets by Send-to-Rx way. In other words, Npcap can work as a firewall now. (hsluoyz)
    - Fixed the npcap driver building path error. (hsluoyz)
    - Fix NPF_OpenDumpfile Code analysis warning (Graham Bloice)
    - Revert "Merge branch 'fix-NPF_OpenDumpFile-CodeAnalysis-Warning'" (Graham Bloice)
    - Update README.md (hsluoyz)
    - Removed useless items in the npf project file. (hsluoyz)
    - Updated the deploy scripts according to npcap driver project files' change. (hsluoyz)
    - Merged npf and npcap projects files into one, different configurations are used to build npf.sys and npcap.sys. (hsluoyz)
    - Updated npf project files, appended "(WinPcap Mode)" string to configurations. (hsluoyz)
    - Updated npcap project files with new GUIDs. (hsluoyz)
    - Updated the debug deploy script. (hsluoyz)
    - NPF_OpenDumpFile: Fix Code Analysis warning (Graham Bloice)
    - Fixed the issue that Vista doesn't recognize Npcap driver's timestamp. (hsluoyz)
    - Dual-sign (SHA1 and SHA256) all the DLLs. (hsluoyz)
    - Added MS CVR cert support for driver signing. (hsluoyz)
    - Removed the SHA256 digest algorithm in signing method because it's useless. (hsluoyz)
    - Improved the installer logic: 1) If uninstaller fails, it will just quit instead of asking user to click "Finish". 2) If uninstaller fails, the installer will not install the new version. (hsluoyz)
    - Compilation error fixed (Krzysztof Raciniewski)
    - Updated Npcap driver package project from VS2015 to VS2015 Update 1 (10586). (hsluoyz)
    - Updated Npcap driver project from VS2015 to VS2015 Update 1 (10586). (hsluoyz)
    - Updated README by describing the driver signing issue. (hsluoyz)
    - Move VS2015 build to Update 1 (10586) (Graham Bloice)
    - Add VS temp file to ignore list (Graham Bloice)
    - Update README.md (hsluoyz)
    - Added the TimestampMode back from WinPcap, supported both x86 and x64 systems. (hsluoyz)
    - Updated README from VS2005, VS2010 to VS2013. (hsluoyz)
    - Updated the Build.bat from VS2005, VS2010 to VS2013. (hsluoyz)
    - Fixed the bug that wpcap.dll causes Wireshark crash on Win8 and Win10. (hsluoyz)
    - Updated Packet, NPFInstall and NPcapHelper projects from VS2010 to VS2013. (hsluoyz)
    - Added correct WanPacket.cpp exclusions for some configurations in Packet project. (hsluoyz)
    - Fixed the configuration inconsistence between solution and projects in Packet project. (hsluoyz)
    - Deleted useless configurations in Packet project. (hsluoyz)
    - Update README.md (hsluoyz)
    - Updated wpcap project from VS2010 to VS2013. (hsluoyz)
    - Deleted useless VS project files, like .dsw .dsp .vcproj. (hsluoyz)
    - Updated wpcap project from VS2005 to VS2010. (hsluoyz)
    - Updated the driver signing timestamp server to digicert. (hsluoyz)
    - Now Npcap driver will be signed in both SHA1 and SHA256 digest algorithms and with timestamp. (hsluoyz)
    - Update README.md (hsluoyz)
    - Now Send-to-Rx adapters can be multiple, the string specified in registry's "SendToRx" value should be semicolon-separated. (hsluoyz)
    - Removed useless adapter options. (hsluoyz)
    - Improved the comment. (hsluoyz)
    - Added the functioning code of send-to-Rx feature, the send-to-Rx adapter will inject all its packets to "Receive Path" (Rx) instead of normal "Send Path" (Tx). Currently only one send-to-Rx adapter is supported by specifying "SendToRx" value in npf service's registry key (need to restart the driver to take effect). (hsluoyz)
    - Added the Send-To-Rx option in the registry and driver, functioning code is not yet added. (hsluoyz)
    - Improved the code formatting by refactoring out the NPF_GetRegistryOption_String function. (hsluoyz)
    - Improved the code formatting by refactoring out the NPF_FreePackets function. (hsluoyz)
    - Improved the code format of NPF_SendCompleteEx function in Npcap driver. (hsluoyz)
    - Updated the copyright to 2016, and removed a useless copy of version.h. (hsluoyz)
    - Fixed the bug reported by Nuno Antonio Dias Ferreira that Npcap fails to retrieve the adapter list using NPF registry way. (hsluoyz)
    - Added download numbers to README. (hsluoyz)
    - Fixed the bug reported by Tenzin Rigden that Npcap installer fails to install correct files in /S silent mode. (hsluoyz)
    - Updated README with several status badges. (hsluoyz)
    - Uploaded the license. (hsluoyz)
    - Changed to GitHub release for future binary distributions, and updated the README. (hsluoyz)
    - Added Npcap's support for Vista, Npcap now will prepare separate binaries for Vista. (hsluoyz)
    - Fixed driver compiling errors for Vista. (hsluoyz)
    - Fixed the bug reported by Amos Sheldon that Npcap causes BSoD: ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY when using Wireshark on Win8, 10 x86. (hsluoyz)
    - Made a build script for debug version. (hsluoyz)
    - Fixed the compiling error when HAVE_WFP_LOOPBACK_SUPPORT is not defined in the driver. (hsluoyz)
    - Added the "DON'T LOOPBACK" feature, if software set PacketSetLoopbackBehavior() by disable, self-sent packets will not be received again. (hsluoyz)
    - Rolled back to version number 0.05 beta as Fyodor suggests (hsluoyz)
    - Fixed the BSoD error caused by driver verifier because that No-Execute (NX) Nonpaged Pool is not used on Win8 and later. I added NX Nonpaged Pool code and fixed this bug. (hsluoyz)
    - Added 128 CPU core support for Npcap, or Npcap will cause BSoD when running on 128-core system. (hsluoyz)
    - Improved the appearance and text of the installer. (hsluoyz)
    - Modified original WinPcap version in wpcap.dll to the right value 4.1.0.2980 (hsluoyz)
    - Updated Npcap version string to 1.00. (hsluoyz)
    - Fixed the bug that Npcap can't capture real loopback traffic after system is resumed from standby. (hsluoyz)
    - Improved the debug print text. (hsluoyz)
    - Now PCAP_IF_LOOPBACK flag in pcap_if_t struct will be set for "Npcap Loopback Adapter" both for DLT_NULL mode and Fake Ethernet mode. (hsluoyz)
    - PCAP_IF_LOOPBACK flag in pcap_if_t struct will be set for "Npcap Loopback Adapter" now, only for DLT_NULL mode. (hsluoyz)
    - Recognize IEEE802.1Q tagged packet, as no many adapters support VLAN tag packet sending, no much use for end users, and this code examines the data which lacks efficiency, so I left it commented, the sending part is also unfinished. This code refers to Win10Pcap at https://github.com/SoftEtherVPN/Win10Pcap. (hsluoyz)
    - Handle IEEE802.1Q VLAN tag when capturing packets, the tag in OOB field will be copied to the packet data, currently only Ethernet supported. This code refers to Win10Pcap at https://github.com/SoftEtherVPN/Win10Pcap. (hsluoyz)
    - Added VlanSupport option in Npcap installer, when Npcap is installed with VlanSupport option checked, the driver will recognize 802.1Q VLAN tag when capturing and sending packets, this feature is provided by Daiyuu Nobori in his Win10Pcap. Only added the option, the logic is not finished yet. (hsluoyz)
    - Improved the driver's registry option read code, used one function to get all options. (hsluoyz)
    - Added the commented code that Npcap driver refuses to provide MAC address when running in DLT_NULL mode, but Windows has other ways to get the "fake" MAC address, so this code is no much use. (hsluoyz)
    - Fixed the bug that DLT_NULL mode can't be disabled in the driver. (hsluoyz)
    - Packet.dll will return NdisMediumNull for "Npcap Loopback Adapter" now. (hsluoyz)
    - Npcap driver will return link type NdisMediumNull (-1) for Npcap Loopback Adapter now, this link type corresponds to DLT_NULL protocol in Wireshark. Use value 2 for IPv4 and value 24 (used by OpenBSD) for IPv6. (hsluoyz)
    - Fixed the debug mode compile error for packet.dll project. (hsluoyz)
    - Fixed the problem that wpcap project debug config lacks the packet.lib import. (hsluoyz)
    - Improved the README. (hsluoyz)
    - Improved the README. (hsluoyz)
    - Improved the README. (hsluoyz)
    - Improved the README. (hsluoyz)
    - Improved the text. (hsluoyz)
    - Finished the DLT_NULL protocol support. But there's a problem that Wireshark didn't parse the loopback packets right, need fix. (hsluoyz)
    - Added DLT_NULL option in Npcap installer, when Npcap is installed with DLT_NULL option checked, the driver will capture and send loopback packets using DLT_NULL protocol instead of Ethernet II, only added the option, not finished yet. (hsluoyz)
    - Improved the characteristics data for Npcap Loopback Adapter, make it return expected values. (hsluoyz)
    - Added "WinPcapCompatible" value in Npcap's registry key, the assignment can be 1 or 0. this is used by other softwares to detect whether Npcap is installed in "WinPcap API-compatible Mode". (hsluoyz)
    - Npcap driver will return 65550 as "Maximum Packet Size" instead of default 1514 for "Npcap Loopback Adapter", which refers to Linux implementation. (hsluoyz)
    - Removed the timestamp server for Npcap driver project. (hsluoyz)
    - Modified "Npcap Loopback Adapter"'s MTU from default 1500 to 65536 value used by Linux. (hsluoyz)
    - Fixed the bug that WSK code fails to init if it is run without Administrator right, the effect is Npcap loopback adapter can't be opened. (hsluoyz)
    - Improved the trace message for WSK init code. (hsluoyz)
    - Improved the error trace message for Winsock Kernel socket operations. (hsluoyz)
    - Updated Npcap version string to 0.04. (hsluoyz)
    - Fixed the bug that Npcap didn't finish IRP when opening adapter fails, this perhaps causes some issues, like the IRQL_NOT_LESS_OR_EQUAL BSoD. (hsluoyz)
    - Improved the code format for Read.c. (hsluoyz)
    - Fixed the bug reported by Jim Young that Npcap fails to capture all chargen protocol packets. This is because Npcap only reads the first NetBuffer data, while chargen packets store data in multiple NetBuffer structs. (hsluoyz)
    - Fixed the bug that Npcap loopback adapter fails to use capture filter when capturing, no packets return if using like "icmp", this is because only first MDL is examined, while loopback packets have at least two MDLs. (hsluoyz)
    - Fixed the sign local time error for "npcap" project files. (hsluoyz)
    - Added DBG macro for Npcap driver project Debug mode, to help generate trace messages in DebugView. (hsluoyz)
    - Fixed a small coding error that occurs in compiling Npcap driver using debug mode. (hsluoyz)
    - Fixed the SYSTEM_SERVICE_EXCEPTION BSoD caused by NdisFOidRequest call, this may help to fix the BAD_POOL_CALLER BSoD (I said "may" because this BSoD can't be reproduced). (hsluoyz)
    - Fixed the sign local time error and HAVE_WFP_LOOPBACK_SUPPORT macro error. (hsluoyz)
    - Rolled back to old resource free code, as IRQL_NOT_LESS_OR_EQUAL and SYSTEM_SERVICE_EXCEPTION BSoDs are not resolved. (hsluoyz)
    - Fixed the bug that loopback packets sent by Npcap is malformed. (hsluoyz)
    - Fixed the issue that Npcap fails to start the service. (hsluoyz)
    - Relieved IRQL_NOT_LESS_OR_EQUAL BSoD to some extent. (hsluoyz)
    - Changed Packet.dll, NPFInstall.exe and NPcapHelper.exe projects to static link mode, because some systems (like Win10 RTM) lacks VC 2010 redist package. (hsluoyz)
    - Updated the README and Build.bat script. (hsluoyz)
    - Added loopback packet sending feature for Npcap, together with the previous loopback packet capturing, now Nmap can use Npcap to detect the localhost machine! (hsluoyz)
    - Improved the code format. (hsluoyz)
    - Do some translation work from NetBufferList to memory data for the WSK code, as Npcap handles packets in NetBufferList in most conditions. (hsluoyz)
    - Improved the code format. (hsluoyz)
    - Integrated WSKTest's init and free code into Npcap driver. (hsluoyz)
    - Improved the code format. (hsluoyz)
    - Improved the variable names. (hsluoyz)
    - Npcap driver can re-inject the loopback packets sent by Winsock Kernel into TCP/IP stack now. Npcap identifies them by whether IPv4 protocol field (IPv6 next header field) equals to IPPROTO_NPCAP_LOOPBACK(250), if identified, Npcap removes the outer IP header, and re-inject the other part into Network Layer sending path using WFP. (hsluoyz)
    - Add WFP Injection Handle init and free code to Npcap driver, used for sending loopback packets. (hsluoyz)
    - Fixed the bug reported by Jim Young, when you run "ping -t -l 65500 127.0.0.1" against Npcap, you will get "Malformed Packet" in Wireshark. This is because the packet read function NPF_TapExForEachOpen didn't copy the 2nd MDL data if the data has crossed the buffer boundary. (hsluoyz)
    - Rolled back wpcap.dll project from VS 2010 to VS 2005, because VS 2005 version wpcap.dll won't run on Wireshark 1.99 under Win8.1 x64. (hsluoyz)
    - Added Visual Studio .ipch files to Git ignore. (hsluoyz)
    - Updated the Build.bat script from VS 2005 to VS 2010. (hsluoyz)
    - Updated the NPcapHelper.exe project from VS 2005 to VS 2010. (hsluoyz)
    - Updated the NPFInstall.exe project from VS 2005 to VS 2010. (hsluoyz)
    - Updated the wpcap.dll project from VS 2005 to VS 2010. (hsluoyz)
    - Updated Packet.dll project from VS 2005 with WDK 8.1 to VS 2010 with WDK 10, x64 version npptools.lib is added to the repo, because this lib is no more available in latest SDK and WDK, but it's necessary for build, so I copied it from VS 2005 to this place. (hsluoyz)
    - Npcap driver can take care of the self-sent loopback packets (sent by WSKTest) by removing the IP header added by Winsock Kernel. (hsluoyz)
    - Added NPF_IsPacketSelfSent function and related header structures, this function tells whether a loopback packet is sent by Npcap itself using protocol field in IP(IPv6). Npcap's packet's protocol field is assigned to 250. I used this way because there's no way for Winsock Kernel to send a packet without IP header. (hsluoyz)
    - Fixed the BAD_POOL_CALLER BSoD, this BSoD is cause by loopback packet capture code based on WFP technique, NdisRetreatNetBufferListDataStart function retreated too much buffer and caused Windows netio module to double-free memories. (hsluoyz)
    - Fixed the SYSTEM_SERVICE_EXCEPTION BSoD by specifying "Npcap Loopback Adapter's MTU to 1514 manually. The origin get MTU method has no meaning for this adapter, as we collect data using WFP instead of NDIS Filter. For WFP you can get packets with no size limit. (hsluoyz)
    - Updated the README and Build.bat from VS2013 to VS2015. (hsluoyz)
    - Updated Npcap driver project files from VS 2013 with WDK 8.1 to VS 2015 with WDK 10. (hsluoyz)
    - Improved the code format in driver's Loopback.c (hsluoyz)
    - Fixed the bug that Npcap loopback adapter renaming fails in Win10 RTM Chinese version. (hsluoyz)
    - Improved the error handling in driver's IOCTL request handle routine. (hsluoyz)
    - Fixed the bug that open routine returns different status code from IRP's status. This bug will trigger Verifier's BSoD check. (hsluoyz)
    - Fixed the bug that "Npcap Loopback Adapter" didn't capture real loopback packets for the driver's first time running. (hsluoyz)
    - Improved the way to add "Loopback" option to "Services" registry key. (hsluoyz)
    - Fixed the bug that options in "Services" registry key fails to be added in Win7 x86 systems. (hsluoyz)
    - Updated Npcap version string to "0.03", Windows-format string is "0.3.0.727". (hsluoyz)
    - Added resource file for NPcapHelper.exe. (hsluoyz)
    - Solved the "can't start the driver automatically after system boot" issue by registering WFP callouts in NPF_OpenAdapter routine. (hsluoyz)
    - Make NPFInstall.exe save "AdminOnly" and "Loopback" options in "Services" registry key. (hsluoyz)
    - Fixed the bug that Npcap loopback adapter can't capture TCP data packets. (hsluoyz)
    - Add service status checking feature in NPFInstall.exe, and stop the installer when Npcap is still in use. (hsluoyz)
    - Fixed the PAGE_FAULT_IN_NONPAGED_AREA Blue screen bug the occurs when uninstalling the driver by "NPFInstall.exe -u" while still using it. (hsluoyz)
    - Add support for Mobile Broadband Miniport adapter capture. (hsluoyz)
    - Fixed the bug that "Npcap Loopback Adaprer" renaming fails in Win10 non-English editions. (hsluoyz)
    - Use version macro instead of hard-coded string, and update version to "0.02". (hsluoyz)
    - Disable the driver boot start option, because this will lead to System 2 error when starting the driver after system reboot, maybe there will be better solution in the future. (hsluoyz)
    - Roll back to SERVICE_DEMAND_START because, when using SERVICE_SYSTEM_START to start the driver, some people report that Npcap driver would fail. (hsluoyz)
    - Fixed the problem that Npcap driver doesn't start automatically when installation finishes. (hsluoyz)
    - Removed "Admin-only Mode" compile commands for Build.bat, also comment all driver builds because we use VS2013 to build drivers. (hsluoyz)
    - Make rename adapter method 2 only applied to Win10, because method 1 will succeed in other version systems. (hsluoyz)
    - Update README based on current modifications. (hsluoyz)
    - Removed the original "Admin-only Mode" implementation, as we have used the new registry way. (hsluoyz)
    - Improved the "Admin-only Mode" logic, by recognizing this mode in registry's "Software\Npcap\AdminOnly" key. So we don't need to maintain a separated driver binary for this mode. (hsluoyz)
    - Npcap now will try to capture WAN adapter packets, I only switched on this feature and it is not got tested, as I don't have a WAN adapter on hand. If this feature has caused problems, please report it to me. (hsluoyz)
    - Improved the two INF files for driver, fixed possible driver installation fail problems. (hsluoyz)
    - Fixed the bug that NPFInstall.exe doesn't rename adapter normally in Win10. (hsluoyz)
    - Fixed the Npcap loopback adapter not registered bug in NPFInstall.exe. (hsluoyz)
    - Fixed the bug that NPFInstall.exe can't rename the loopback adapter in Windows 10. (hsluoyz)
    - Improved the error handling logic in NPFInstall.exe's interface rename function. (hsluoyz)
    - Fixed possible NULL pool memory pointer free bugs by securing ExFreePool() call. (hsluoyz)
    - Add a INF file (npcap_wfp.inf or npf_wfp.inf) to install Npcap driver in WFP callout way. Now we have two INF files to install the driver. The problem Npcap driver doesn't start after system reboot is fixed in this way. (hsluoyz)
    - Fixed another bug in NPFInstall.exe's installing WFP callout driver feature. (hsluoyz)
    - Fixed a bug in NPFInstall.exe about uninstalling WFP callout driver. (hsluoyz)
    - Use macros to control the driver name and deploy folder name. (hsluoyz)
    - Add WFP callout driver install option for NPFInstall.exe, -iw to install the WFP callout driver, -uw to uninstall it. The INF file used is name "npf_wfp.inf" or "npcap_wfp.inf" (based on whether it is "WinPcap Compatible Mode"). (hsluoyz)
    - Improved the driver unload logic. (hsluoyz)
    - Improved the driver unload logic, because Microsoft suggests to unregister the WFP callouts before deleting the devices. (hsluoyz)
    - Improved the README about how to use Npcap first in "Non-WinPcap Mode". (hsluoyz)
    - Made loopback traffic capture support a macro, can be toggled using HAVE_WFP_LOOPBACK_SUPPORT. (hsluoyz)
    - Update the README. (hsluoyz)
    - Comment the command-line driver signing, because it seems that Windows don't recognize this signing method, it viewed the driver as unsigned, so roll back to the Visual Studio signing way. (hsluoyz)
    - Finished the installation script part for supporting WinPcap Mode. (hsluoyz)
    - Fixed the bug in Packet.dll code that adapter name "NPF" is still changed to "NPCAP" in WinPcap Mode. (hsluoyz)
    - Fixed the bug in npcap driver project files. (hsluoyz)
    - Added driver sign support to deploy scripts. (hsluoyz)
    - Added WinPcap checking for installation script. (hsluoyz)
    - Improved exsited Npcap version checking logic by using NPFInstall.exe instead of wpcap.dll. (hsluoyz)
    - Improved the installer script logic using IF ELSE. (hsluoyz)
    - Add the "WinPcap Mode" option in installer, still can't install related files. (hsluoyz)
    - Added "WinPcap Mode", in this mode, Npcap uses all WinPcap names and APIs. So any software using WinPcap can use Npcap without change. (hsluoyz)
    - Build.bat is used to build all the projects, no deployment. (hsluoyz)
    - Modified VS projects file in order to use the command line MSBuild way. (hsluoyz)
    - Update README about porting to VS2008. (hsluoyz)
    - Update NPcapHelper project from VS2005 to VS2008. (hsluoyz)
    - Update Packet.dll project from VS2005 to VS2008. (hsluoyz)
    - Update wpcap project from VS2005 to VS2008. (hsluoyz)
    - Improved the format of the Deploy.bat. (hsluoyz)
    - Add the automatic "Admin-only Mode" compile and deploy support for the driver. (hsluoyz)
    - Add macro "NPF_NPCAP_RUN_IN_WINPCAP_MODE" to control the whether to build all the projects in "WinPcap Mode". (hsluoyz)
    - Delete useless configurations in Npcap driver VS project files. (hsluoyz)
    - wpcap.dll project uses the version.h in the top directory. (hsluoyz)
    - Add wpcap.dll compile support for Npcap. (hsluoyz)
    - Changed the version string from "4.1.3" to "0.01". (hsluoyz)
    - Rename the installer's strings from "NPcap" to "Npcap". (hsluoyz)
    - Fixed the bug that MAC source address and dest address in loopback packets are not cleared to zero. (hsluoyz)
    - Add DLL file type to .gitignore. (hsluoyz)
    - Made a deploy script named "Deploy.bat", it can copy the files, sign the files and generate the installer. (hsluoyz)
    - Rename "NPcap" to "Npcap" for NPFInstall project, and put all name definitions to WpcapNames.h. So it's easy now to rename Npcap. (hsluoyz)
    - Rename the driver from "NPcap" to "Npcap". (hsluoyz)
    - Npcap supports loopback traffic sniffing now! Wireshark can see ICMP loopback packets when pinging 127.0.0.1 (hsluoyz)
    - Npcap driver can send the loopback traffic data to user-mode now, Wireshark can see these traffic, which means that our WFP method works, but the data offset is not right. (hsluoyz)
    - Added WFP code (LBTest) to Npcap NDIS driver, they integrated good and do their own job without conflicts, the next thing is to make them cooperate. (hsluoyz)
    - Take care of the "Npcap Loopback Adapter", don't let it see the "normal" traffic Windows gives it, because it is for the special use of loopback packets. (hsluoyz)
    - Change the loopback adapter's ID from "{XXXX}" form to "\Device\{XXXX}". (hsluoyz)
    - The non-grouphead Open instances now know whether they are loopback ones by Loopback member. (hsluoyz)
    - Now the Open instance in the driver knows if itself is our loopback adapter. (hsluoyz)
    - NPcap.sys driver now knows which adapter is our "NPcap Loopback Adapter" by comparing the binding adapter with the Loopback ID in registry. The result is stored in _DEVICE_EXTENSION.Loopback, if Loopback is 1, then this device is loopback. (hsluoyz)
    - NPFInstall.exe can now set the our adapter's Interface Name to "NPcap Loopback Adapter" now. An adapter has many names, like Interface Name, Adapter Name, etc. Both two names can be set by NPFInstall.exe now. So user can see our adapter clearly. (hsluoyz)
    - Record our "NPcap Loopback Adapter"'s Device ID (like {78EFF1CE-EA4C-491E-8E71-8F74071C3214}) to registry: HKLM\SOFTWARE\NPcap\'s Loopback value, so the driver can know which adapter is our loopback adapter and takes care of it. (hsluoyz)
    - Improved the coding format for NPFInstall.exe source. (hsluoyz)
    - Improved the NPFInstall.exe logic to get the Device Instance ID of our installed adapter. (hsluoyz)
    - NPFInstall.exe supports renaming our loopback adapter to "NPcap Loopback Adapter" now, but this is not the network name, we need to find a way to rename the network in ncpa.cpl, because that name is used more often. (hsluoyz)
    - Improved the coding format for packet.dll source, no logic changed. (hsluoyz)
    - Add "Add Windows Loopback Adapter" feature for NPFInstall.exe, we call this adapter "NPcap Loopback Adapter". use "-il" to install and "-ul" to uninstall. This adapter is for NPcap's loopback packets capturing, when user captures under this adapter, he will get the "real" loopback packets (like ping 127.0.0.1 or any local IPs) instead of the Windows-predesigned adapter traffic, other loopback adapters are not infected by this feature. (hsluoyz)
    - Supress the warning 4311 and 4312 when compiling Dll and NPFInstall projects, these warnings are because VS2005 are too old for newer Windows SDKs. (hsluoyz)
    - Changed the adapter names NPcap returned to user softwares from "\Device\NPCAP_{XXX}" to original WinPcap's "\Device\NPF_{XXX}" form. This is for compatibility, because Wireshark has hard-coded the adapter names to "NPF_", which leads to interface names show abnormal. (hsluoyz)
    - Added more adapter types to inf file's FilterMediaTypes, fixed the bug that NPcap can't list bluetooth adapters and VMware Network Adapters (VMnetX). Now NPcap lists the same adapters with WinPcap. (hsluoyz)
    - Update the README, add some links. (hsluoyz)
    - Add macro to control whether to compile the npcap.sys driver in "Admin-only mode" or not. Only if NPF_ADMIN_ONLY_MODE macro is defined, the driver is compiled in "Admin-only mode", default is NOT defined. (hsluoyz)
    - Add descriptions to the top of source files in NPcapHelper project. (hsluoyz)
    - Improved the README (hsluoyz)
    - Fixed the bug that certificate check fails in driver's installation, the reason is that the installation script used the old NPcap.cat files that dismatch with the new NPcap.sys drivers. (hsluoyz)
    - This version of installation script is for "Add privilege support to Npcap so we can limit it to users with administrator access", a page named "Security Options" is added to the installation, user can choose whether to install NPcap in "Administrator Only" mode. Default is on. (hsluoyz)
    - Fixed a bug that when NPcap is installed without "Admin only", the user software (like nmap) will prompt a window said "NPcapHelper.exe is not found". (hsluoyz)
    - This version of packet.dll is for "Add privilege support to Npcap so we can limit it to users with administrator access", if the process with packet.dll loaded runs under non-Admin and NPcapHelper.exe is available (user chooses this function at installation), packet.dll will start NPcapHelper.exe and ask it for the driver handles. The handles can only be used by the current process based on Windows mechanism, so it is safe. (hsluoyz)
    - Used to compile "NPcapHelper.exe", this executable is for "Add privilege support to Npcap so we can limit it to users with administrator access", NPcapHelper will be run under Administrator, so when NPcap's user software (nmap, wireshark) don't have Admin rights, the packet.dll code will automatically start the NPcapHelper in Admin mode, NPcapHelper gets the driver handles and passes them back to the user software. NPcapHelper.cpp is the code of the executable. It has no interface. NPcapHelperTest.c is the code to receive the driver handles which has been integrated to packet.dll code, I keep it here only for test convenience. (hsluoyz)
    - The access restriction for the driver needs to link the wdmsec.lib library, modified the project configuration to fit it. (hsluoyz)
    - Restrict the NPcap driver's access to Administrators, only applications run with Administrator privileges can capture and send packets now. (hsluoyz)
    - Update the NPcap version string based on https://github.com/nmap/nmap/issues/134 (hsluoyz)
    - Deal with NPcap name and version self-identification, see more details: https://github.com/nmap/nmap/issues/134 (hsluoyz)
    - Update .gitignore file to exclude wpcap.dll build intermediates. (hsluoyz)
    - Modify the NSIS script, wpcap.dll and packet.dll are now installed into %SYSTEM_DIR%\NPcap. WinDump (x86) and WinDump (x64) are tested against this edition's NPcap. (hsluoyz)
    - Add packet.dll project intermediate files' exclusion in .gitignore file. (hsluoyz)
    - Changed NPcap's driver name from "npf" to "npcap", together changed the NSIS installation script to copy wpcap.dll and packet.dll to "C:\Program Files\NPcap" instead of "C:\Windows\System32" path. (hsluoyz)
    - Add .aps exclusion in .gitignore file. (hsluoyz)
    - Add .opensdf exclusion in .gitignore file. (hsluoyz)
    - Delete intermediate files. (hsluoyz)
    - Create README.md (hsluoyz)
    - Add .gitignore file to exclude intermediate files and folders. (hsluoyz)
    - Add support for NPFInstall to install original WinPcap driver (npf.sys for XP) with -ii and -uu option. (hsluoyz)
    - Update NPFInstall (npf.sys installing tool) project from Visual Studio 2005 to Visual Studio 2008. (hsluoyz)
    - Update the NSIS script and installation package (winpcap-nmap-4.1.3-NDIS6-1.2.1.exe) for latest changes. Win 8(8.1) x64 OS would fail installing winpcap-nmap-4.1.3-NDIS6-1.2.1.exe as We didn't code sign the x64 driver. You need to sign the driver with your own driver certificate or disbale "Driver Signature Enforcement" on your Windows 8 x64 before installing. (hsluoyz)
    - Fix the no NdisWriteCompleteEvent event bug (macros.h) provided by Jakub Zawadzki from Wireshark Team, I also added the modification for Write.c, but it seems unnecessary. (hsluoyz)
    - Change NPCap default build platform from NDIS 6.2 to NDIS 6.0 as Wireshark suggests. (hsluoyz)
    - Add disable offload support(Openclos.c) provided by Jakub Zawadzki from Wireshark Team. (hsluoyz)
    - Add multiple MDL support in net buffer when NPCap reads packets(Read.c) provided by Jakub Zawadzki from Wireshark Team. (hsluoyz)
    - Add NPCap command-line build support (makefile, sources) and code sign script (sign.bat) provided by Jakub Zawadzki from Wireshark Team. (hsluoyz)
    - Update the timestamp and version strings in npf.inf (hsluoyz)
    - Update NPCAP project and solution file version from VS 2012 to VS 2013. (hsluoyz)
    - Finish the comments of NPcap. (hsluoyz)
    - Removed a bug that can cause "stop working" in win7 x64 (hsluoyz)
    - Wrote some comments for npf driver (hsluoyz)
    - Add some comments for npf driver. (hsluoyz)
    - Update the installer, removed the "start the driver now" option because of a Windows 8 bug. (hsluoyz)
    - Update the installer of WinPcap 4.1.3 for Nmap (hsluoyz)
    - Update wpcap directory, update the version of wpcap.dll (hsluoyz)
    - Update the build readme (hsluoyz)
    - Change the "macros.h" and "Packet.h" file contents in the driver directory "npf", substitute all "npf6x" with "npf", delete useless files (hsluoyz)
    - Change the Packet.vcproj file contents in the packet.dll directory "Dll", substitute all "npf6x" with "npf" (hsluoyz)
    - Change the file contents in the driver installer directory "NPFInstall", substitute all "npf6x" with "npf", delete useless files (hsluoyz)
    - Change the file contents in the packet.dll directory "Dll", substitute all "npf6x" with "npf" (hsluoyz)
    - Change the file contents in the driver directory "npf", substitute all "npf6x" with "npf", delete useless files (hsluoyz)
    - Rename all packet.dll folders and files from "npf6x" to "npf" (hsluoyz)
    - Rename all driver folders and files from "npf6x" to "npf" (hsluoyz)
    - revert to r32058 (hsluoyz)
    - Update WpcapNames.h, change the name "npf6x" back to "npf" (hsluoyz)
    - Update the installer, changed the text of installer, removed a line feed of the license file. (hsluoyz)
    - Update the readme, named "README-builds.txt" (hsluoyz)
    - Update the installer, change the "npf6x" name to "npf", the latest release is "winpcap-nmap-4.1.3-NDIS6-1.2.exe" (hsluoyz)
    - Update packetWin7 folder, change the "npf6x" name back to "npf" for compatibility issue. (hsluoyz)
    - Update WpcapNames.h, change the name "npf6x" back to "npf" (hsluoyz)
    - Fixed a bug (a better solution for the OID_GEN_CURRENT_PACKET_FILTER problem) (hsluoyz)
    - Add README with build instructions by Yang. (David Fifield)
    - Fixed a bug (NdisFDeregisterFilterDriver is wrongly called in the DriverEntry routine in packet.c file) (hsluoyz)
    - Fixed a bug (OID_GEN_CURRENT_PACKET_FILTER request handling for NDIS filter driver) (hsluoyz)
    - Update the license of NPcap to the Nmap 6.40 license. (hsluoyz)
    - Changed the publisher word to "Nmap Project" in the installer. (hsluoyz)
    - 1) Removed most bugs in NPcap-LWF driver (packetWin7 folder). 2) Packed an installer (winpcap-nmap-4.1.3-NDIS6-1.1.exe in the installer folder), it seems that the installer is OK with Win7 x86, Win7 x64, Win8 x86, except Win8 x64. I will figure it out next week. (hsluoyz)
    - Signed all .exe, dll and sys files of NPcap 1.0 and updated the installer. The installer path is: yang\NPcap-LWF\installerwinpcap-nmap-4.1.3-NDIS6-1.0.exe Now everyone can test NPcap without entering test mode! Enjoy! (hsluoyz)
    - Update the WinPcap NDIS 6 protocol driver to NDIS 6 filter driver (LWF). The coding work is finished, but there are still bugs in it. The filter driver can not filter the received packets when used with Nmap right now. Wireshark can use it to capture packets. (hsluoyz)
    - Add the installer folder, it includes the new WinPcap 4.1.3 for Nmap installer, named winpcap-nmap-4.1.3-NDIS6-0.1.exe. This installer will install the old npf driver for XP and Vista and install the new npf6x driver for Win7 and Win8. Call for test for this EXE! (hsluoyz)
    - Update the Common folder, WpcapNames.h is changed for the new npf6x driver support. The driver file for the new WinPcap 4.1.3 for Nmap is named npf6x.sys, but the service name for it is still npf for the compatibility issue. (hsluoyz)
    - Update the packetWin7, it includes the npf driver change from NDIS5.0 to NDIS6.0 and the packet.dll change for the new driver installation code. NPF6xInstall is the separated code for driver installation, invoked by the installer. (hsluoyz)
    - Make a copy of packetNtx, rename it to packetWin7 (hsluoyz)
    - This is the original WinPcap 4.1.3 source. (hsluoyz)